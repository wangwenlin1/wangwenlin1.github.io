(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1203:function(v,_,t){"use strict";t.r(_);var e=t(19),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"uml-2概念模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uml-2概念模型"}},[v._v("#")]),v._v(" UML 2概念模型")]),v._v(" "),e("p",[e("img",{attrs:{src:t(403),alt:"image-20210316221623369"}})]),v._v(" "),e("h2",{attrs:{id:"组成部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[v._v("#")]),v._v(" 组成部分")]),v._v(" "),e("p",[v._v("UML概念模型主要由三部分组成")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("基本的构造块")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("运用于这些构造块的通用机制")])])]),v._v(" "),e("li",[e("p",[e("code",[v._v("组织UML视图的架构")])])])]),v._v(" "),e("h3",{attrs:{id:"构造块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造块"}},[v._v("#")]),v._v(" 构造块")]),v._v(" "),e("p",[v._v("构造块是指UML的基本建模元素，包括一下")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("事物")]),v._v("是对模型中核心要素的抽象")]),v._v(" "),e("li",[e("code",[v._v("关系")]),v._v("把事物紧密联系在一起")]),v._v(" "),e("li",[e("code",[v._v("图")]),v._v("是由很多相互关联的事物组成的")])]),v._v(" "),e("h4",{attrs:{id:"事物"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事物"}},[v._v("#")]),v._v(" 事物")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("结构事物")]),v._v(" 它们通常是模型的静态部分，用于描述概念元素或物理元素。常见的结构事物包括类、接口、用例、协作、构件、工件、节点等。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("行为事物")]),v._v(" 代表了跨越时间和空间的行为。常见的行为事物包括交互、状态机、活动等")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("分组事物")]),v._v(" 用于将模型元素组织在一起。主要的分组事物是包，还有其他的诸如子系统、层等基于包的扩展事物。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("注释事物")]),v._v(" 用来描述、说明和标注模型的任何元素，所有的UML图形元素均可以用注解来说明。")])])]),v._v(" "),e("h4",{attrs:{id:"关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关系"}},[v._v("#")]),v._v(" 关系")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("依赖")]),v._v(" 其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义。依赖关系的箭头表明了依赖的方向，即没有箭头端的事物依赖于有箭头端的事物")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("关联")]),v._v(" 表明两个事物之间存在着明确的、稳定的语义联系。默认情况下关联的方向是双向的，也就是说，两个关联的事物之间互相依赖。如果要标注单方向的依赖，则需要在关联的一端标注箭头")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("泛化")]),v._v(" 是一种特殊—一般关系，特殊元素（子元素）的对象可替代一般元素（父元素）的对象")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("实现")]),v._v("是两个事物之间的一种契约关系，其中的一个事物（箭头指向的事物）描述了另一个事物必须实现的契约。在两种位置会遇到实现关系：一种是在接口和实现它们的类或构件之间；另一种是在用例和实现它们的协作之间。")])])]),v._v(" "),e("p",[e("img",{attrs:{src:t(404),alt:"image-20210316221623369"}})]),v._v(" "),e("h4",{attrs:{id:"图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[v._v("#")]),v._v(" 图")]),v._v(" "),e("ul",[e("li",[v._v("模型是所有事物和关系的知识库，创建模型有助于描述正在设计的软件系统的所需行为")]),v._v(" "),e("li",[v._v("UML 2.5 共14种图（详情看应用UML 2建模）")])]),v._v(" "),e("h3",{attrs:{id:"通用机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通用机制"}},[v._v("#")]),v._v(" 通用机制")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("规格说明")]),v._v("：文本维度的模型描述。")]),v._v(" "),e("li",[e("code",[v._v("修饰")]),v._v("：描述建模元素的细节信息。")]),v._v(" "),e("li",[e("code",[v._v("通用划分")]),v._v("：建模时对事物的划分方法。")]),v._v(" "),e("li",[e("code",[v._v("扩展机制")]),v._v("：用于扩展UML建模元素，包括构造型、约束和标记值3类机制。")])]),v._v(" "),e("h2",{attrs:{id:"_4-1-架构模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-架构模型"}},[v._v("#")]),v._v(" “4+1”架构模型")]),v._v(" "),e("p",[e("img",{attrs:{src:t(405),alt:"image-20210316233033014"}})]),v._v(" "),e("p",[e("code",[v._v("基本概念")])]),v._v(" "),e("ul",[e("li",[v._v("共提供了5个视图来组织UML模型")]),v._v(" "),e("li",[v._v("每个视图面向不同的用户，提供不同的UML模型，以实现不同的建模目标。")])]),v._v(" "),e("p",[e("code",[v._v("组成部分")])]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("用例视图")]),v._v(" 建模过程的起点和依据，面向最终用户，描述系统的功能性需求。所有其他视图都是从用例视图派生而来的，该视图把系统的基本需求捕获为用例并提供构造其他视图的基础。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("逻辑视图")]),v._v(" 面向系统分析和设计人员，描述软件结构。它来自功能需求，用于描述问题域的结构。作为类和对象的集合，它的重点是展示对象和类是如何组成系统、实现所需系统行为。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("进程视图")]),v._v(" 面向系统集成人员，描述系统性能、可伸缩性、吞吐量等信息。其目标是为我们系统中的可执行线程和进程建模，使它们作为活动类。事实上，它是逻辑视图面向进程的变体，包含所有相同的工件。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("实现视图")]),v._v(" 面向编码人员，描述系统的组装和配置管理。其目标是对组成基于系统的物理代码的文件和构件进行建模。")])]),v._v(" "),e("li",[e("p",[e("code",[v._v("部署视图")]),v._v(" 面向系统工程师，描述系统的拓扑结构、分布、移交、安装等信息。建模的目标是把组件物理地部署到一组物理的、可计算的节点（如计算机）上。")])])]),v._v(" "),e("h2",{attrs:{id:"应用uml-2建模"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用uml-2建模"}},[v._v("#")]),v._v(" 应用UML 2建模")]),v._v(" "),e("p",[v._v("UML 2提供了两类（结构图和行为图）14种图形用于系统建模。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("类图")]),v._v("：描述类、接口、协作及它们之间的关系。")]),v._v(" "),e("li",[e("code",[v._v("对象图")]),v._v("：描述对象及对象之间的关系。")]),v._v(" "),e("li",[e("code",[v._v("包图")]),v._v("：描述包及包之间的相互依赖关系。")]),v._v(" "),e("li",[e("code",[v._v("组合结构图")]),v._v("：描述系统某一部分（组合结构）的内部结构。")]),v._v(" "),e("li",[e("code",[v._v("构件图")]),v._v("：描述构件及其相互依赖关系。")]),v._v(" "),e("li",[e("code",[v._v("部署图")]),v._v("：展示构件在各节点上的部署。")]),v._v(" "),e("li",[e("code",[v._v("外廓图")]),v._v("：展示构造型、元类等扩展机制的结构。")]),v._v(" "),e("li",[e("code",[v._v("时序图")]),v._v("：展示对象之间消息的交互，强调消息执行顺序的交互图。")]),v._v(" "),e("li",[e("code",[v._v("通信图")]),v._v("：展示对象之间消息的交互，强调对象协作的交互图。")]),v._v(" "),e("li",[e("code",[v._v("时间图")]),v._v("：展示对象之间消息的交互，强调真实时间信息的交互图。")]),v._v(" "),e("li",[e("code",[v._v("交互概览图")]),v._v("：展示交互图之间的执行顺序。")]),v._v(" "),e("li",[e("code",[v._v("活动图")]),v._v("：描述事物执行的控制流或数据流。")]),v._v(" "),e("li",[e("code",[v._v("状态机图")]),v._v("：描述对象所经历的状态转移。")]),v._v(" "),e("li",[e("code",[v._v("用例图")]),v._v("：描述一组用例、参与者及它们之间的相互关系。")])]),v._v(" "),e("h3",{attrs:{id:"图书馆管理系统的原始需求如下所示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图书馆管理系统的原始需求如下所示"}},[v._v("#")]),v._v(" 图书馆管理系统的原始需求如下所示")]),v._v(" "),e("ul",[e("li",[v._v("该系统是一个基于Web的计算机应用系统。")]),v._v(" "),e("li",[e("code",[v._v("读者")]),v._v("可以"),e("code",[v._v("查询图书信息")]),v._v("及"),e("code",[v._v("借阅信息")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("读者")]),v._v("可以通过系统"),e("code",[v._v("预约所需的图书")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("图书馆工作人员")]),v._v("利用该系统完成"),e("code",[v._v("读者的借书")]),v._v("、"),e("code",[v._v("还书")]),v._v("业务。")]),v._v(" "),e("li",[e("code",[v._v("图书馆工作人员")]),v._v("可以对"),e("code",[v._v("图书信息")]),v._v("、"),e("code",[v._v("读者信息")]),v._v("等进行维护。")]),v._v(" "),e("li",[v._v("对于到期的图书，系统会"),e("code",[v._v("自动向读者发送催还信息")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("管理员")]),v._v("会"),e("code",[v._v("定期进行系统维护")]),v._v("。")])]),v._v(" "),e("h3",{attrs:{id:"用例图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用例图"}},[v._v("#")]),v._v(" 用例图")]),v._v(" "),e("p",[e("code",[v._v("用例图")]),v._v(" 是被称为参与者的外部用户所能观察到的系统功能的模型图，其主要功能如下所示。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("列出系统中的用例和参与者。")])]),v._v(" "),e("li",[e("p",[v._v("显示哪个参与者参与了哪个用例的执行工作。")])])]),v._v(" "),e("p",[v._v("用例图中的核心概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("用例")]),v._v("：系统中的一个功能单元，可以被描述为参与者与系统之间的一次交互作用。")]),v._v(" "),e("li",[e("code",[v._v("参与者")]),v._v("：通过系统边界与系统进行有意义交互的外部实体。")]),v._v(" "),e("li",[e("code",[v._v("泛化")]),v._v("：参与者与参与者之间的关系。")]),v._v(" "),e("li",[e("code",[v._v("关联")]),v._v("：用例与参与者之间的关系。")]),v._v(" "),e("li",[e("code",[v._v("扩展、包含、泛化")]),v._v("：用例之间的关系。")])]),v._v(" "),e("p",[v._v("用例图的推荐使用场合：包括 "),e("code",[v._v("业务建模")]),v._v(" 、 "),e("code",[v._v("需求获取")]),v._v(" 和 "),e("code",[v._v("定义")]),v._v(" 等场合。")]),v._v(" "),e("p",[e("strong",[v._v("用例图中的主要建模元素")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(406),alt:""}})]),v._v(" "),e("p",[e("img",{attrs:{src:t(407),alt:""}})]),v._v(" "),e("p",[e("strong",[e("center",[v._v("用例图")])],1)]),v._v(" "),e("h3",{attrs:{id:"活动图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#活动图"}},[v._v("#")]),v._v(" 活动图")]),v._v(" "),e("p",[v._v("用例文档描述了用例的业务流程，有些用例的流程比较复杂（如存在分支、循环等复杂结构），只用文本描述这个流程并不直观，且不利于用户之间的沟通。此时，开发人员可以采用活动图来描述该用例内部的执行流程。")]),v._v(" "),e("p",[e("code",[v._v("活动图")]),v._v(" 是一种动态行为图，将业务流程或其他计算的结构展示为内部一步步的控制流和数据流，主要用于描述 "),e("code",[v._v("某一方法")]),v._v(" 、 "),e("code",[v._v("机制")]),v._v(" 或用 "),e("code",[v._v("例的内部行为")]),v._v(" 。活动图中的核心概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("活动、组合活动")]),v._v(" ：表示某个内部的控制逻辑。")]),v._v(" "),e("li",[e("code",[v._v("对象、对象流")]),v._v(" ：与活动相关的数据对象。")]),v._v(" "),e("li",[e("code",[v._v("转移、分支")]),v._v(" ：控制活动之间的先后顺序。")]),v._v(" "),e("li",[e("code",[v._v("并发、同步")]),v._v(" ：支持活动间的并发和同步。")]),v._v(" "),e("li",[e("code",[v._v("分区：描述")]),v._v(" 活动的不同参与者。")])]),v._v(" "),e("p",[v._v("活动图的推荐使用场合：包括 "),e("code",[v._v("业务建模")]),v._v(" 、 "),e("code",[v._v("需求")]),v._v(" 、 "),e("code",[v._v("类设计")]),v._v(" 等场合。")]),v._v(" "),e("p",[e("strong",[v._v("活动图建模元素：")]),e("br"),v._v(" "),e("img",{attrs:{src:t(408),alt:""}})]),v._v(" "),e("p",[e("img",{attrs:{src:t(409),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"类图、对象图、包图和组合结构图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类图、对象图、包图和组合结构图"}},[v._v("#")]),v._v(" 类图、对象图、包图和组合结构图")]),v._v(" "),e("p",[v._v("描述完需求后，本小节对系统进行分析和设计。"),e("br"),v._v("\nUML提供了4种静态结构图来描述系统。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("类图")]),v._v("是软件的蓝图，用于详细描述系统内各个对象的相关类，以及这些类之间的静态关系；")]),v._v(" "),e("li",[e("code",[v._v("对象图")]),v._v("用于表示在某一时刻，类的对象的静态结构和行为；")]),v._v(" "),e("li",[e("code",[v._v("包图")]),v._v("用于展现由模型本身分解而成的组织单元（包）及它们的依赖关系；")]),v._v(" "),e("li",[e("code",[v._v("组合结构图")]),v._v("用于描述系统中某一部分（组合结构）的内部结构，包括该部分与系统其他部分的交互点。")])]),v._v(" "),e("p",[v._v("静态结构图中的核心概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("类图")]),v._v("：类、接口、依赖、关联、泛化、实现。")]),v._v(" "),e("li",[e("code",[v._v("对象图")]),v._v("：对象、链接、多重性。")]),v._v(" "),e("li",[e("code",[v._v("包图")]),v._v("：包（框架、层、子系统）、依赖。")]),v._v(" "),e("li",[e("code",[v._v("组合结构图")]),v._v("：组合结构、部件、端口、角色绑定。")])]),v._v(" "),e("p",[v._v("静态结构图的推荐使用场合：包括 "),e("code",[v._v("业务建模")]),v._v(" 、 "),e("code",[v._v("分析")]),v._v(" 、 "),e("code",[v._v("设计")]),v._v(" 、 "),e("code",[v._v("实现")]),v._v(" 等场合。"),e("br"),v._v(" "),e("img",{attrs:{src:t(410),alt:""}}),e("br"),v._v(" "),e("img",{attrs:{src:t(411),alt:""}})]),v._v(" "),e("p",[v._v("对于图书馆管理系统，通过类图可以反映该系统内部的静态结构特征（类和类之间的关系）。图所示的类图就展示了图书类（Book）、借阅信息类（BorrowInfo）、读者类（Reader）之间的静态关系。其中，图书分为不同的类别（Catalog），如科技书（TechBook）、文学书（LitBook）、新书（NewBook），而读者分为学生（Student）和教职工（Faculty）。"),e("br"),v._v("\n对象图则用于展示某一时刻对象之间的关系。图所示的对象图展示了一名教职工（thbin）的个人借阅信息（myInfo），他一共借了4本书：一本新书（book1）、两本科技书（book2、book3）和一本文学书（book4）。"),e("br"),v._v("\n包图展示了软件系统的分层结构。在图书馆管理系统中，如图左半部分所示，系统高层分为3层，其中界面层负责用户交互；数据访问层负责访问底层信息；业务逻辑层负责协调界面层和数据访问层间的访问逻辑。此外，对于数据访问层内部，又可以采用分包的方式进行逻辑划分，如图2-19右半部分所示，分为借阅包、读者包、图书包。")]),v._v(" "),e("p",[e("img",{attrs:{src:t(412),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"时序图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时序图"}},[v._v("#")]),v._v(" 时序图")]),v._v(" "),e("p",[e("img",{attrs:{src:t(413),alt:""}})]),v._v(" "),e("p",[e("img",{attrs:{src:t(414),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"通信图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通信图"}},[v._v("#")]),v._v(" 通信图")]),v._v(" "),e("p",[v._v("在展示对象交互图时，时序图侧重描述交互的先后顺序，而交互对象之间的关系并不能体现出来，通信图则是从另外一个视角来描述对象交互的交互图。")]),v._v(" "),e("p",[v._v("通信图中的核心概念包括以下几个:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("对象")]),v._v("、"),e("code",[v._v("协作角色")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("协作")]),v._v("、"),e("code",[v._v("交互")]),v._v("、"),e("code",[v._v("消息")]),v._v("。")])]),v._v(" "),e("p",[v._v("通信图的推荐使用场合： "),e("code",[v._v("包括用例分析")]),v._v(" 、 "),e("code",[v._v("用例设计")]),v._v(" 等场合。"),e("br"),v._v(" "),e("img",{attrs:{src:t(415),alt:""}}),e("br"),v._v(" "),e("img",{attrs:{src:t(416),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"时间图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时间图"}},[v._v("#")]),v._v(" 时间图")]),v._v(" "),e("p",[v._v("对于一些特定的系统（如实时系统），有时候真实的时间信息非常重要（如某个消息在发送出去后，在1s之内必须返回），UML 2引入了新的时间图来描述时间信息。"),e("br"),v._v("\n时间图（Timing Diagram）是一种交互图，用于展现消息跨越不同对象或角色时真实的时间信息，可描述单个或多个对象状态变化的时间点及维持特定状态的时间段。此外，时序图作为表示交互的主要手段，也可以在其中增加时间约束来表明对象状态变化的时间点及维持特定状态的时间段。时间图中的核心概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[v._v("时间约束、持续时间约束、生命线")]),v._v(" "),e("li",[v._v("状态、条件、事件。")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(417),alt:""}})]),v._v(" "),e("p",[e("img",{attrs:{src:t(418),alt:""}})]),v._v(" "),e("h3",{attrs:{id:"状态机图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态机图"}},[v._v("#")]),v._v(" 状态机图")]),v._v(" "),e("p",[v._v("时序图和通信图都是交互图的一种，它们侧重于描述对象之间的交互过程。然而，有时候对象本身也是很复杂的，它可能涉及不同的状态和行为，此时需要通过状态机图来表示。"),e("br"),v._v("\n状态机图（State Machine Diagram），就是UML 1.x中的状态图（Statechart Diagram），利用状态和事件描述对象本身的行为。它是一种非常重要的行为图，强调事件导致的对象状态的变化。状态机图中的主要概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("状态")]),v._v("、"),e("code",[v._v("初态")]),v._v("、"),e("code",[v._v("终态")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("事件")]),v._v("、"),e("code",[v._v("转移")]),v._v("、"),e("code",[v._v("动作")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("并发状态机")]),v._v("。")])]),v._v(" "),e("p",[v._v("状态机图的推荐使用场合： "),e("code",[v._v("包括类设计场合")])]),v._v(" "),e("p",[e("img",{attrs:{src:t(419),alt:""}})]),v._v(" "),e("p",[v._v("UML中的动态图主要可以分为交互图和行为图两大类，它们都是非常有价值且容易混淆的，此处简单总结几种动态图的使用方法。它们的共同点有以下几个。")]),v._v(" "),e("p",[v._v("描述系统中单个或多个事物动态行为特性。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("交互图")]),v._v("（时序图、通信图、交互概览图、时间图）侧重描述事物间的交互过程。")]),v._v(" "),e("li",[e("code",[v._v("行为图")]),v._v("（活动图、状态机图）侧重描述事物本身的行为特征。")])]),v._v(" "),e("p",[v._v("它们的区别主要体现在每种图形的侧重点不同。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("交互图")]),v._v("（时序图、通信图）：适合描述单个用例中多个对象之间的协作行为。")]),v._v(" "),e("li",[e("code",[v._v("交互概览图")]),v._v("：用于描述复杂用例多个时序图间的控制流程。")]),v._v(" "),e("li",[e("code",[v._v("时间图")]),v._v("：用于描述时间受控的单个或多个对象间状态交互。")]),v._v(" "),e("li",[e("code",[v._v("状态机图")]),v._v("：适合描述跨越多个用例的单个对象的行为如何影响该对象的状态。")]),v._v(" "),e("li",[e("code",[v._v("活动图")]),v._v("：适合描述多个对象跨越多个用例时的总貌。")])]),v._v(" "),e("h3",{attrs:{id:"构件图和部署图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构件图和部署图"}},[v._v("#")]),v._v(" 构件图和部署图")]),v._v(" "),e("p",[e("code",[v._v("构件图")]),v._v(" 将封装类作为构件，描述在系统实现环境中的软件构件和它们之间的关系。构件图中的主要概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("构件")]),v._v("、"),e("code",[v._v("工件")]),v._v("、"),e("code",[v._v("接口")]),v._v("（所供接口、所需接口）。")]),v._v(" "),e("li",[e("code",[v._v("装配连接")]),v._v("、"),e("code",[v._v("委托连接")]),v._v("、"),e("code",[v._v("依赖")]),v._v("。")])]),v._v(" "),e("p",[v._v("构件图的推荐使用场合包括系统设计、实现、部署等。")]),v._v(" "),e("p",[e("strong",[v._v("构件图中的主要建模元素")]),e("br"),v._v(" "),e("img",{attrs:{src:t(420),alt:""}})]),v._v(" "),e("p",[e("strong",[v._v("图书馆管理系统构件图")]),e("br"),v._v(" "),e("img",{attrs:{src:t(421),alt:""}})]),v._v(" "),e("p",[e("code",[v._v("部署图")]),v._v(" 描述系统所需的硬件环境的物理结构，以及软件资源在硬件环境中的部署方案。部署图中的主要概念包括以下几个。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("节点")]),v._v("、"),e("code",[v._v("工件")]),v._v("、"),e("code",[v._v("部署规范")]),v._v("。")]),v._v(" "),e("li",[e("code",[v._v("连接")]),v._v("、"),e("code",[v._v("依赖")]),v._v("。")])]),v._v(" "),e("p",[v._v("部署图的推荐使用场合：包括 "),e("code",[v._v("系统设计")]),v._v(" 、 "),e("code",[v._v("实施")]),v._v(" 、 "),e("code",[v._v("部署")]),v._v(" 等场合。")]),v._v(" "),e("p",[e("strong",[v._v("部署图中的主要建模元素")]),e("br"),v._v(" "),e("img",{attrs:{src:t(422),alt:""}})]),v._v(" "),e("p",[v._v("该系统共有4类不同的节点。其中读者客户端面向普通读者提供查询、预约等功能；工作人员前置机面向工作人员用于实现具体的借书、还书业务；后台数据库用于运行系统数据库环境；管理员后台用于帮助管理员实现各种系统维护功能")]),v._v(" "),e("p",[e("strong",[v._v("图书馆管理系统部署图")]),e("br"),v._v(" "),e("img",{attrs:{src:t(423),alt:""}})]),v._v(" "),e("h2",{attrs:{id:"练习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[v._v("#")]),v._v(" 练习")]),v._v(" "),e("h3",{attrs:{id:"选择题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择题"}},[v._v("#")]),v._v(" 选择题")]),v._v(" "),e("p",[v._v("1．模型是（　　）。")]),v._v(" "),e("ul",[e("li",[v._v("A．现实世界的简化")]),v._v(" "),e("li",[v._v("B．现实世界的图形化描述")]),v._v(" "),e("li",[v._v("C．现实世界的具体化描述")]),v._v(" "),e("li",[v._v("D．现实世界的封装")])]),v._v(" "),e("p",[v._v("2．下列关于UML的论述，错误的是（　　）")]),v._v(" "),e("ul",[e("li",[v._v("A．将几个面向对象方法统一起来")]),v._v(" "),e("li",[v._v("B．可作为与软件开发人员之间的通用语言")]),v._v(" "),e("li",[v._v("C．可作为一种指导软件开发的通用过程")]),v._v(" "),e("li",[v._v("D．可用于通用领域，也可用于嵌入式领域")])]),v._v(" "),e("p",[v._v("3．UML中的“统一”体现在很多方面，下列选项（　　）不是UML统一的内容。")]),v._v(" "),e("ul",[e("li",[v._v("A．开发生命周期")]),v._v(" "),e("li",[v._v("B．软件开发过程")]),v._v(" "),e("li",[v._v("C．应用领域")]),v._v(" "),e("li",[v._v("D．实现语言和平台")])]),v._v(" "),e("p",[v._v("4．和UML 1.x相比，UML 2进行了比较大的改动，对于普通用户来说，主要的改动体现在对一些图进行了调整。下列4个选项中，（　　）是UML 2新增的用于描述静态结构的图。")]),v._v(" "),e("ul",[e("li",[v._v("A．类图")]),v._v(" "),e("li",[v._v("B．交互概览图")]),v._v(" "),e("li",[v._v("C．时间图")]),v._v(" "),e("li",[v._v("D．组合结构图")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("A")])]),v._v(" "),e("li",[e("p",[v._v("C")])]),v._v(" "),e("li",[e("p",[v._v("B")])]),v._v(" "),e("li",[e("p",[v._v("D")])])]),v._v(" "),e("h3",{attrs:{id:"简单题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单题"}},[v._v("#")]),v._v(" 简单题")]),v._v(" "),e("p",[v._v("1．通过建模技术，可以达到哪些目标？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("可视化：模型有助于按照所需的样式可视化系统")]),v._v(" "),e("li",[v._v("描述：模型能够描述系统的结构和行为")]),v._v(" "),e("li",[v._v("构造：模型提供构造系统的模版提高质量，减少成本")]),v._v(" "),e("li",[v._v("文档化：模型可以文档化设计决策")])])]),v._v(" "),e("p",[v._v("2．在系统建模过程中，需要遵循哪些基本原则？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("选择合适的模型")]),v._v(" "),e("li",[v._v("模型具有不同的精准度")]),v._v(" "),e("li",[v._v("最好的模型是与现实相联系")]),v._v(" "),e("li",[v._v("需要从多个视角创建不同的模型，单一的模型是不够的")])])]),v._v(" "),e("p",[v._v("3．在哪些情况下，适合使用UML进行系统建模？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("项目采用的OO方法论")]),v._v(" "),e("li",[v._v("提高项目开发人员之间的交流效率，准确抓准问题的本质")]),v._v(" "),e("li",[v._v("系统的规模和设计都比较复杂，需要用图形抽象的表达复杂的概念，增强设计的灵活性、可持续性、可读性、可理解性，以便暴露深层次的设计问题、降低开发风险")]),v._v(" "),e("li",[v._v("需要记录已成功项目、产品的公共设计方案，在开发新项目时可以参考、复用过去设计，以节省投入，提高开发效率和整体成功率")]),v._v(" "),e("li",[v._v("有必要采用一套通用的图形语言和符号体系描述组织的业务流程和软件需求，促进业务人员、软件开发人员之间一致、高效地交流")])])]),v._v(" "),e("p",[v._v("4．UML的语法结构使用什么方式来定义，如何定义？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("UML语法结构采用UML元模型来定义")]),v._v(" "),e("li",[v._v("主要是采用UML类图描述各元素的抽象语法，采用约束机制和自然语言（文本）来描述模型定义")])])]),v._v(" "),e("p",[v._v("5．UML的语义结构主要包含什么内容？")]),v._v(" "),e("blockquote",[e("p",[v._v("UML 语言结构主要包括两类语义域")]),v._v(" "),e("ol",[e("li",[v._v("结构语义定义了, 在建模中关于个体的UML结构化模型元素的含义，这个含义可能是某个特定的时间点是正确的，也称为静态定义")]),v._v(" "),e("li",[v._v("行为语义定义了在建模域中, 关于个体如何随着时间变化而做出不同行为的UML行为模型元素，也称为动态语义")])])]),v._v(" "),e("p",[v._v("6．UML中的事物之间主要存在哪些基本关系？")]),v._v(" "),e("blockquote",[e("p",[v._v("UML中的事物主要有4类基本关系")]),v._v(" "),e("ol",[e("li",[v._v("依赖是两个事物之间的弱语义关系，表明两个事物之间存在着一种使用关系，其中一个事物发生会影响到另一个事物的语义")]),v._v(" "),e("li",[v._v("关联是一种强语义联系的结构关系，表明两个事物之间存在这明确的、稳定的语义联系")]),v._v(" "),e("li",[v._v("泛化是一种特殊/一般的关系，特殊元素（子元素）的替代一般元素（父元素）的对象")]),v._v(" "),e("li",[v._v("实现的两个事物是之间的一种契约关系，其中的一个事物（箭头指向的事物）描述了另一个事物必须实现的契约")])])]),v._v(" "),e("p",[v._v("7．什么是构造型，UML中如何利用构造型进行扩展？")]),v._v(" "),e("blockquote",[e("p",[v._v("构造型是UML的一种扩展机制，其作用是基于已有的建模元素扩展新的建模元素，可用于所有的模型元素，构造型的使用非常简单，只需要通过为已有的元素设定一个构造型标记，以及相应的属性即可，也可以通过图标的方式区分不同的构造型")])]),v._v(" "),e("p",[v._v("8．什么是外廓，如何利用外廓图扩展UML模型？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("外廊是基于UML元素的子集为特定领域定义了UML的一个特定版本，即定义了一组对UML已有模型的扩展和限定机制，以用于某个特定领域。这些扩展和限定机制包括：预定义的构造型、标记值、约束、和基类")]),v._v(" "),e("li",[v._v("外廊是一种用于描述UML扩展机制的结构图，通过外廊图可以定义外廊包，以及特定的构造型，使用的元类、构造型和元类之间的扩展关系等内容，从而完成一系列的扩展")])])]),v._v(" "),e("p",[v._v("9．什么是UML架构中的视图，和UML图有什么区别和联系？")]),v._v(" "),e("blockquote",[e("ol",[e("li",[v._v("视图可以理解为系统在某个视角的模型，每个视图面向不同的用户，提供不同的UML模型，以实现不同的建模目标")]),v._v(" "),e("li",[v._v("UML图是特定的UML模型，视图由不同的UML图组成，根据视图所面向的用户和建模目标，选择不同的UML图进行建模")])])])])}),[],!1,null,null,null);_.default=i.exports},403:function(v,_,t){v.exports=t.p+"assets/img/1.7b4a2eae.png"},404:function(v,_,t){v.exports=t.p+"assets/img/image-20210316221623369.e3cebae8.png"},405:function(v,_,t){v.exports=t.p+"assets/img/image-20210316233033014.5dfa7c74.png"},406:function(v,_,t){v.exports=t.p+"assets/img/image-20210317095529604.99d66f94.png"},407:function(v,_,t){v.exports=t.p+"assets/img/20210317105902.drawio.1b9963df.svg"},408:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-15-00-12.70af68d0.png"},409:function(v,_,t){v.exports=t.p+"assets/img/1615979036.drawio.3f01af4e.svg"},410:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-15-46-53.f94090e1.png"},411:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-15-47-38.f6fb1bf7.png"},412:function(v,_,t){v.exports=t.p+"assets/img/1615982092.drawio.11030dbb.svg"},413:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-16-23-57.3d25f4e2.png"},414:function(v,_,t){v.exports=t.p+"assets/img/1615983898.drawio.9d043ead.svg"},415:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-17-00-45.9931b78f.png"},416:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-17-01-51.3cc9525e.png"},417:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-17-08-44.ef5124c7.png"},418:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-17-09-44.e2e359ed.png"},419:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-19-39-57.725b8283.png"},420:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-21-42-16.33fc8db2.png"},421:function(v,_,t){v.exports=t.p+"assets/img/1616003432.drawio.e007e216.svg"},422:function(v,_,t){v.exports=t.p+"assets/img/2021-03-17-22-04-54.2e0a1dd7.png"},423:function(v,_,t){v.exports=t.p+"assets/img/1616004652.drawio.1681ec2a.svg"}}]);
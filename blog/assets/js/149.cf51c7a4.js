(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{1222:function(t,e,a){"use strict";a.r(e);var n=a(19),l=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"动态字段映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态字段映射"}},[t._v("#")]),t._v(" 动态字段映射")]),t._v(" "),a("p",[t._v("当 Elasticsearch 检测到文档中的新字段时，默认情况下它会动态地将该字段添加到类型映射中。动态参数控制这种行为。")]),t._v(" "),a("p",[t._v("通过将动态参数设置为 true 或 runtime，可以明确指示 Elasticsearch 根据传入文档动态创建字段。当启用动态字段映射时，Elasticsearch 使用下表中的规则来确定如何映射每个字段的数据类型。")]),t._v(" "),a("p",[t._v("下表中的字段数据类型是 Elasticsearch 动态检测的唯一字段数据类型。必须显式地映射所有其他数据类型。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.11/dynamic-field-mapping.html#dynamic-field-mapping-types",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("JSON data type")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v('"dynamic":"true"')])])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v('"dynamic":"runtime"')])])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("null")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("没有添加字段")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("没有添加字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("true")]),t._v(" or "),a("code",[t._v("false")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("boolean")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("double")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("float")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("double")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("integer")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("long")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("long")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("object")]),t._v("^1^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("object")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("object")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("array")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取决于数组中的第一个非null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取决于数组中的第一个非null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("string")]),t._v(" that passes "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.11/dynamic-field-mapping.html#date-detection",title:"Date detection",target:"_blank",rel:"noopener noreferrer"}},[t._v("date detection"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("date")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("date")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("string")]),t._v(" that passes "),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.11/dynamic-field-mapping.html#numeric-detection",title:"Numeric detection",target:"_blank",rel:"noopener noreferrer"}},[t._v("numeric detection"),a("OutboundLink")],1)]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("float")]),t._v(" or "),a("code",[t._v("long")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("double")]),t._v(" or "),a("code",[t._v("long")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("string")]),t._v(" that doesn't pass "),a("code",[t._v("date")]),t._v(" detection or "),a("code",[t._v("numeric")]),t._v(" detection")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("text")]),t._v(" with a "),a("code",[t._v(".keyword")]),t._v(" sub-field")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("keyword")])])])])]),t._v(" "),a("p",[t._v("您可以在文档和对象级别禁用动态映射。将动态参数设置为 false 将忽略新字段，如果 Elasticsearch 遇到未知字段，将严格拒绝文档。")]),t._v(" "),a("p",[t._v("使用 PUT 映射 API 更新现有字段的动态设置。")]),t._v(" "),a("p",[t._v("您可以自定义用于日期检测和数字检测的动态字段映射规则。若要定义可应用于其他动态字段的自定义映射规则，请使用 dynamic_templates。")]),t._v(" "),a("h3",{attrs:{id:"日期检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期检测"}},[t._v("#")]),t._v(" 日期检测")]),t._v(" "),a("p",[t._v("如果启用了 date_detection (默认) ，那么将检查新的字符串字段，以查看它们的内容是否匹配在 dynamic_date_formats 中指定的任何日期模式。如果找到匹配项，则添加具有相应格式的新日期字段。")]),t._v(" "),a("p",[t._v("动态 date_formats 的默认值是:")]),t._v(" "),a("p",[t._v('["strict_date_optional_time"，" yyyy/MM/dd HH:MM:ss Z | yyyy/MM/dd Z"]')]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('PUT my-index-000001/_doc/1\n{\n  "create_date": "2015/09/02"\n}\n\nGET my-index-000001/_mapping\n')])])]),a("p",[t._v('create_date 字段作为日期字段添加，格式为: "yyyy/MM/dd HH:MM:ss Z | yyyy/MM/dd Z"。')]),t._v(" "),a("h3",{attrs:{id:"禁用日期检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用日期检测"}},[t._v("#")]),t._v(" 禁用日期检测")]),t._v(" "),a("p",[t._v("可以通过将 date_detection 设置为 false 来禁用动态日期检测:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('PUT my-index-000001\n{\n  "mappings": {\n    "date_detection": false\n  }\n}\n\nPUT my-index-000001/_doc/1 \n{\n  "create": "2015/09/02"\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("create_date 字段已作为文本字段添加。\n")])])]),a("h3",{attrs:{id:"自定义检测到的日期格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义检测到的日期格式"}},[t._v("#")]),t._v(" 自定义检测到的日期格式")]),t._v(" "),a("p",[t._v("可以定制动态的 dynamic_date_formats 来支持你自己的日期格式:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('PUT my-index-000001\n{\n  "mappings": {\n    "dynamic_date_formats": ["MM/dd/yyyy"]\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  "create_date": "09/25/2015"\n}\n')])])]),a("h3",{attrs:{id:"数字检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字检测"}},[t._v("#")]),t._v(" 数字检测")]),t._v(" "),a("p",[t._v("虽然 JSON 支持本地浮点数和整数数据类型，但有些应用程序或语言有时可能将数字呈现为字符串。通常正确的解决方案是显式地映射这些字段，但是数字检测(默认情况下禁用)可以自动地做到这一点:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('PUT my-index-000001\n{\n  "mappings": {\n    "numeric_detection": true\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  "my_float":   "1.0", \n  "my_integer": "1" \n}\n')])])]),a("ul",[a("li",[t._v("my_float 字段作为 float 字段添加。")]),t._v(" "),a("li",[t._v("my_integer 字段作为长字段添加。")])])])}),[],!1,null,null,null);e.default=l.exports}}]);
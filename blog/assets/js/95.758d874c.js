(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{1149:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"程序源代码基本元素介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序源代码基本元素介绍"}},[t._v("#")]),t._v(" 程序源代码基本元素介绍")]),t._v(" "),s("h2",{attrs:{id:"编程和程序代码元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程和程序代码元素"}},[t._v("#")]),t._v(" 编程和程序代码元素")]),t._v(" "),s("p",[t._v("有名字的函数、有名字的值（包括变量和有名常量）、以及定义类型和类型别名将被统称为资源。 资源名必须为 "),s("strong",[s("a",{attrs:{href:"https://gfw.go101.org/article/keywords-and-identifiers.html#identifier",target:"_blank",rel:"noopener noreferrer"}},[t._v("标识符（identifier）"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"一个简单的go示例程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个简单的go示例程序"}},[t._v("#")]),t._v(" 一个简单的Go示例程序")]),t._v(" "),s("h2",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("//")]),t._v("来起始一个行注释")]),t._v(" "),s("li",[t._v("使用一个"),s("code",[t._v("/*")]),t._v("和"),s("code",[t._v("*/")]),t._v("对来包裹一个块注释")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定当前源文件所在的包名")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入一个标准库包")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MaxRand "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个有名整型常量")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个函数声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n StatRandomNumbers生成一些不大于MaxRand的非负\n 随机整数，并统计和返回小于和大于MaxRand/2的随机数\n 个数。输入参数numRands指定了要生成的随机数的总数。\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StatRandomNumbers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numRands "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明了两个变量（类型都为int，初始值都为0）")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个for循环代码块")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numRands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个if-else条件控制代码块")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MaxRand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" MaxRand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于：b = b + 1")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此函数返回两个结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main函数，或主函数，是一个程序的入口函数。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用上面声明的StatRandomNumbers函数，")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并将结果赋给使用短声明语句声明的两个变量。")]),t._v("\n\tx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StatRandomNumbers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用两个内置函数（print和println）。")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Result: "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" + "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" = "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"? "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的示例程序中，单词 "),s("code",[t._v("package")]),t._v(" 、 "),s("code",[t._v("import")]),t._v(" 、 "),s("code",[t._v("const")]),t._v(" 、 "),s("code",[t._v("func")]),t._v(" 、 "),s("code",[t._v("var")]),t._v(" 、 "),s("code",[t._v("for")]),t._v(" 、 "),s("code",[t._v("if")]),t._v(" 、 "),s("code",[t._v("else")]),t._v(" 和 "),s("code",[t._v("return")]),t._v(" 均为关键字。 其它大多数单词均为标识符。 请阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/keywords-and-identifiers.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("关键字和标识符"),s("OutboundLink")],1),t._v("以获得更多关于关键字和标识符的信息。")]),t._v(" "),s("p",[t._v("四个 "),s("code",[t._v("int")]),t._v(" （一个在第"),s("em",[t._v("15")]),t._v("行，另三个在第"),s("em",[t._v("13")]),t._v("行） 表示内置基本类型 "),s("code",[t._v("int")]),t._v(" 。int类型是Go中的基本整数类型之一。 第"),s("em",[t._v("5")]),t._v("行中的 "),s("code",[t._v("16")]),t._v(" 、第"),s("em",[t._v("17")]),t._v("行中的 "),s("code",[t._v("0")]),t._v(" 、 第"),s("em",[t._v("20")]),t._v("行中的 "),s("code",[t._v("1")]),t._v(" 以及第"),s("em",[t._v("30")]),t._v("行的 "),s("code",[t._v("100")]),t._v(" 均为整型字面量。 第"),s("em",[t._v("35")]),t._v("行的 "),s("code",[t._v('"Result: "')]),t._v(" 是一个字符串字面量。 请阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/basic-types-and-value-literals.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("基本类型和它们的字面量表示"),s("OutboundLink")],1),t._v("以获取更多关于基本类型和它们的字面量的信息。 Go中的非基本类型（均为组合类型）将在以后的其它文章中介绍和解释。")]),t._v(" "),s("p",[t._v("第"),s("em",[t._v("20")]),t._v("行是一个赋值语句。 第"),s("em",[t._v("5")]),t._v("行声明了一个有名常量，叫做 "),s("code",[t._v("MaxRand")]),t._v(" 。 第"),s("em",[t._v("15")]),t._v("行和第"),s("em",[t._v("30")]),t._v("行使用标准变量声明语句声明了三个变量。 第"),s("em",[t._v("17")]),t._v("行的变量 "),s("code",[t._v("i")]),t._v(" 以及第"),s("em",[t._v("33")]),t._v("行的变量 "),s("code",[t._v("x")]),t._v(" 和 "),s("code",[t._v("y")]),t._v(" 是使用变量短声明语句声明的。 变量 "),s("code",[t._v("a")]),t._v(" 和 "),s("code",[t._v("b")]),t._v(" 在声明的时候被指定为 "),s("code",[t._v("int")]),t._v(" 类型。 编译器会自动推导出变量 "),s("code",[t._v("i")]),t._v(" 、 "),s("code",[t._v("num")]),t._v(" 、 "),s("code",[t._v("x")]),t._v(" 和 "),s("code",[t._v("y")]),t._v(" 的类型均为 "),s("code",[t._v("int")]),t._v(" 类型，因为它们的初始值都是整型字面量表示的。 请阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/constants-and-variables.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("常量和变量"),s("OutboundLink")],1),t._v("以获取什么是类型不确定值、类型推导、赋值、以及如何声明变量和有名常量。")]),t._v(" "),s("p",[t._v("上面的示例程序中使用了很多操作符，比如第"),s("em",[t._v("17")]),t._v("和"),s("em",[t._v("19")]),t._v("行的小于比较符 "),s("code",[t._v("<")]),t._v(" ，第"),s("em",[t._v("36")]),t._v("行的等于比较符 "),s("code",[t._v("==")]),t._v(" ，还有第"),s("em",[t._v("20")]),t._v("和"),s("em",[t._v("36")]),t._v("行的加法运算符 "),s("code",[t._v("+")]),t._v(" 。 第"),s("em",[t._v("35")]),t._v("行中的 "),s("code",[t._v("+")]),t._v(" 不是一个运算符，它是一个字符串字面量中的一个字符。 一个使用操作符的操作中涉及到的值称为操作值（有时也可称为运算数）。 请阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用操作符"),s("OutboundLink")],1),t._v("以获取更多关于操作符的信息。 更多操作符将在后续其它文章中介绍。")]),t._v(" "),s("p",[t._v("第"),s("em",[t._v("35")]),t._v("和"),s("em",[t._v("36")]),t._v("行调用了两个内置函数 "),s("code",[t._v("print")]),t._v(" 和 "),s("code",[t._v("println")]),t._v(" 。 从第"),s("em",[t._v("13")]),t._v("行到第"),s("em",[t._v("26")]),t._v("行声明的函数 "),s("code",[t._v("StatRandomNumbers")]),t._v(" 在第"),s("em",[t._v("33")]),t._v("行被调用。 第"),s("em",[t._v("19")]),t._v("行也调用了一个函数  "),s("code",[t._v("Intn")]),t._v(" 。 这个函数声明在 "),s("code",[t._v("math/rand")]),t._v(" 标准库包中。 请阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/function-declarations-and-calls.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数声明及函数调用"),s("OutboundLink")],1),t._v("以获取更多关于函数声明及函数调用的信息。")]),t._v(" "),s("ul",[s("li",[t._v("注意，一般 "),s("code",[t._v("print")]),t._v(" 和 "),s("code",[t._v("println")]),t._v(" 这两个内置函数并不推荐使用。 在正式的项目中，我们应该尽量使用 "),s("code",[t._v("fmt")]),t._v(" 标准库包中声明的相应函数。 *")])]),t._v(" "),s("h2",{attrs:{id:"关于代码断行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于代码断行"}},[t._v("#")]),t._v(" 关于代码断行")]),t._v(" "),s("p",[t._v("像很多其它流行编程语言一样，Go也使用一对大括号 "),s("code",[t._v("{")]),t._v(" and "),s("code",[t._v("}")]),t._v(" 来形成一个显式代码块。但是在Go代码中，编码样式风格有一些限制。 比如，很多左大括号 "),s("code",[t._v("{")]),t._v(" 不能被放到下一行。 如果，上面的 "),s("code",[t._v("StatRandomNumbers")]),t._v(" 被修改成如下所示，则上面的示例程序将编译不通过。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StatRandomNumbers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numRands "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译错误：语法错误")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numRands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译错误：语法错误")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Intn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MaxRand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" MaxRand"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译错误：语法错误")]),t._v("\n\t\t\ta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("一些程序员不是很喜欢这些限制。但是这些限制有两个好处：")]),t._v(" "),s("ol",[s("li",[t._v("它们使得Go程序编译得非常快。")]),t._v(" "),s("li",[t._v("它们使得不同的Go程序员编写的代码风格类似，从而一个Go程序员写的代码很容易被另一个程序员看懂。")])]),t._v(" "),s("p",[t._v("我们可以阅读"),s("a",{attrs:{href:"https://gfw.go101.org/article/line-break-rules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码断行规则"),s("OutboundLink")],1),t._v("一文以获取更多关于代码换行规则的细节。在目前，我们最好避免将左大括号放在下一行。 或者说，每行的非空起始字符不能是左大括号（但是，请记住，这不是一个普适的规则）。")])])}),[],!1,null,null,null);a.default=e.exports}}]);
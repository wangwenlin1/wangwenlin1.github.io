(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{1257:function(t,s,v){"use strict";v.r(s);var _=v(19),e=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"redis6-0新功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis6-0新功能"}},[t._v("#")]),t._v(" Redis6.0新功能")]),t._v(" "),_("h2",{attrs:{id:"acl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#acl"}},[t._v("#")]),t._v(" ACL")]),t._v(" "),_("h3",{attrs:{id:"简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),_("p",[t._v("Redis ACL是Access Control List（访问控制列表）的缩写，该功能允许根据可以执行的命令和可以访问的键来限制某些连接。")]),t._v(" "),_("p",[t._v("在Redis 5版本之前，Redis 安全规则只有密码控制 还有通过rename 来调整高危命令比如 flushdb ， KEYS* ， shutdown 等。Redis 6 则提供ACL的功能对用户进行更细粒度的权限控制 ：")]),t._v(" "),_("p",[t._v("（1）接入权限:用户名和密码")]),t._v(" "),_("p",[t._v("（2）可以执行的命令")]),t._v(" "),_("p",[t._v("（3）可以操作的 KEY")]),t._v(" "),_("p",[t._v("参考官网：https://redis.io/topics/acl")]),t._v(" "),_("h3",{attrs:{id:"命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),_("p",[t._v("1、使用acl list命令展现用户权限列表")]),t._v(" "),_("p",[t._v("（1）数据说明")]),t._v(" "),_("p",[_("img",{attrs:{src:v(892),alt:""}})]),t._v(" "),_("p",[t._v("2、使用acl cat命令")]),t._v(" "),_("p",[t._v("（1）查看添加权限指令类别")]),t._v(" "),_("p",[_("img",{attrs:{src:v(893),alt:""}})]),t._v(" "),_("p",[t._v("（2）加参数类型名可以查看类型下具体命令"),_("br"),t._v(" "),_("img",{attrs:{src:v(894),alt:""}})]),t._v(" "),_("p",[t._v("3、使用acl whoami命令查看当前用户")]),t._v(" "),_("p",[_("img",{attrs:{src:v(895),alt:""}})]),t._v(" "),_("p",[t._v("4、使用aclsetuser命令创建和编辑用户ACL")]),t._v(" "),_("p",[t._v("（1）ACL规则")]),t._v(" "),_("p",[t._v("下面是有效ACL规则的列表。某些规则只是用于激活或删除标志，或对用户ACL执行给定更改的单个单词。其他规则是字符前缀，它们与命令或类别名称、键模式等连接在一起。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("ACL规则")]),t._v(" "),_("th"),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("类型")]),t._v(" "),_("td",[t._v("参数")]),t._v(" "),_("td",[t._v("说明")])]),t._v(" "),_("tr",[_("td",[t._v("启动和禁用用户")]),t._v(" "),_("td",[_("em",[_("strong",[t._v("*on*")])])]),t._v(" "),_("td",[t._v("激活某用户账号")])]),t._v(" "),_("tr",[_("td",[_("em",[_("strong",[t._v("*off*")])])]),t._v(" "),_("td",[t._v("禁用某用户账号。注意，已验证的连接仍然可以工作。如果默认用户被标记为off，则新连接将在未进行身份验证的情况下启动，并要求用户使用AUTH选项发送AUTH或HELLO，以便以某种方式进行身份验证。")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("权限的添加删除")]),t._v(" "),_("td",[_("em",[_("strong",[t._v("*+<command>*")])])]),t._v(" "),_("td",[t._v("将指令添加到用户可以调用的指令列表中")])]),t._v(" "),_("tr",[_("td",[_("em",[_("strong",[t._v("*-<command>*")])])]),t._v(" "),_("td",[t._v("从用户可执行指令列表移除指令")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[_("em",[_("strong",[t._v("*+@<category>*")])])]),t._v(" "),_("td",[t._v("添加该类别中用户要调用的所有指令，有效类别为@admin、@set、@sortedset…等，通过调用ACL CAT命令查看完整列表。特殊类别@all表示所有命令，包括当前存在于服务器中的命令，以及将来将通过模块加载的命令。")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("-@<actegory>")]),t._v(" "),_("td",[t._v("从用户可调用指令中移除类别")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[_("em",[_("strong",[t._v("*allcommands*")])])]),t._v(" "),_("td",[t._v("+@all的别名")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[_("em",[_("strong",[t._v("*nocommand*")])])]),t._v(" "),_("td",[t._v("-@all的别名")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("可操作键的添加或删除")]),t._v(" "),_("td",[_("em",[_("strong",[t._v("*~<pattern>*")])])]),t._v(" "),_("td",[t._v("添加可作为用户可操作的键的模式。例如~*允许所有的键")])])])]),t._v(" "),_("p",[t._v("（2）通过命令创建新用户默认权限")]),t._v(" "),_("p",[t._v("acl setuser user1")]),t._v(" "),_("p",[_("img",{attrs:{src:v(896),alt:""}})]),t._v(" "),_("p",[t._v("在上面的示例中，我根本没有指定任何规则。如果用户不存在，这将使用just created的默认属性来创建用户。如果用户已经存在，则上面的命令将不执行任何操作。")]),t._v(" "),_("p",[t._v("（3）设置有用户名、密码、ACL权限、并启用的用户")]),t._v(" "),_("p",[t._v("acl setuser user2 on >password ~cached:* +get")]),t._v(" "),_("p",[_("img",{attrs:{src:v(897),alt:""}})]),t._v(" "),_("p",[t._v("(4)切换用户，验证权限")]),t._v(" "),_("p",[_("img",{attrs:{src:v(898),alt:""}})]),t._v(" "),_("h2",{attrs:{id:"io多线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#io多线程"}},[t._v("#")]),t._v(" IO多线程")]),t._v(" "),_("h3",{attrs:{id:"简介-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),_("p",[t._v("Redis6终于支撑多线程了，告别单线程了吗？")]),t._v(" "),_("p",[t._v("IO多线程其实指"),_("strong",[t._v("客户端交互部分")]),t._v("的"),_("strong",[t._v("网络IO")]),t._v("交互处理模块"),_("strong",[t._v("多线程")]),t._v("，而非"),_("strong",[t._v("执行命令多线程")]),t._v("。Redis6执行命令依然是单线程。")]),t._v(" "),_("h3",{attrs:{id:"原理架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原理架构"}},[t._v("#")]),t._v(" 原理架构")]),t._v(" "),_("p",[t._v("Redis 6 加入多线程,但跟 Memcached 这种从 IO处理到数据访问多线程的实现模式有些差异。Redis 的多线程部分只是用来处理网络数据的读写和协议解析，执行命令仍然是单线程。之所以这么设计是不想因为多线程而变得复杂，需要去控制 key、lua、事务，LPUSH/LPOP 等等的并发问题。整体的设计大体如下:")]),t._v(" "),_("p",[_("img",{attrs:{src:v(899),alt:""}})]),t._v(" "),_("p",[t._v("另外，多线程IO默认也是不开启的，需要再配置文件中配置")]),t._v(" "),_("p",[t._v("io-threads-do-reads  yes")]),t._v(" "),_("p",[t._v("io-threads 4")]),t._v(" "),_("h2",{attrs:{id:"工具支持-cluster"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#工具支持-cluster"}},[t._v("#")]),t._v(" 工具支持 Cluster")]),t._v(" "),_("p",[t._v("之前老版Redis想要搭集群需要单独安装ruby环境，Redis 5 将 redis-trib.rb 的功能集成到 redis-cli 。另外官方 redis-benchmark 工具开始支持 cluster 模式了，通过多线程的方式对多个分片进行压测。"),_("br"),t._v(" "),_("img",{attrs:{src:v(900),alt:""}})]),t._v(" "),_("h2",{attrs:{id:"redis新功能持续关注"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis新功能持续关注"}},[t._v("#")]),t._v(" Redis新功能持续关注")]),t._v(" "),_("p",[t._v("Redis6新功能还有：")]),t._v(" "),_("p",[t._v("1、RESP3新的 Redis 通信协议：优化服务端与客户端之间通信")]),t._v(" "),_("p",[t._v("2、Client side caching客户端缓存：基于 RESP3 协议实现的客户端缓存功能。为了进一步提升缓存的性能，将客户端经常访问的数据cache到客户端。减少TCP网络交互。")]),t._v(" "),_("p",[t._v("3、Proxy集群代理模式：Proxy 功能，让 Cluster 拥有像单实例一样的接入方式，降低大家使用cluster的门槛。不过需要注意的是代理不改变 Cluster 的功能限制，不支持的命令还是不会支持，比如跨 slot 的多Key操作。")]),t._v(" "),_("p",[t._v("4、Modules API")]),t._v(" "),_("p",[t._v("Redis 6中模块API开发进展非常大，因为Redis Labs为了开发复杂的功能，从一开始就用上Redis模块。Redis可以变成一个框架，利用Modules来构建不同系统，而不需要从头开始写然后还要BSD许可。Redis一开始就是一个向编写各种系统开放的平台。")])])}),[],!1,null,null,null);s.default=e.exports},892:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-53-05.01308d81.png"},893:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-53-14.a2dc96bb.png"},894:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-53-21.7e8e307f.png"},895:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-53-30.452fce29.png"},896:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-54-25.4f4d1a2c.png"},897:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-54-40.e4d995e3.png"},898:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-54-50.8ddd6af1.png"},899:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-55-34.18860cec.png"},900:function(t,s,v){t.exports=v.p+"assets/img/2021-05-15-09-55-59.d7fa5195.png"}}]);
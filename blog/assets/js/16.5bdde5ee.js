(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{1256:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"redis应用问题解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis应用问题解决"}},[t._v("#")]),t._v(" Redis应用问题解决")]),t._v(" "),n("h2",{attrs:{id:"缓存穿透"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),n("h2",{attrs:{id:"问题描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),n("p",[t._v("key对应的数据在数据源并不存在，每次针对此key的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户id获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。"),n("br"),t._v(" "),n("img",{attrs:{src:a(874),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),n("p",[t._v("一个一定不存在缓存及查询不到的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。")]),t._v(" "),n("p",[t._v("解决方案：")]),t._v(" "),n("p",[n("strong",[t._v("（1）")]),t._v(" "),n("strong",[t._v("对空值缓存：")]),t._v(" 如果一个查询返回的数据为空（不管是数据是否不存在），我们仍然把这个空结果（null）进行缓存，设置空结果的过期时间会很短，最长不超过五分钟")]),t._v(" "),n("p",[n("strong",[t._v("（2）")]),t._v(" "),n("strong",[t._v("设置可访问的名单（白名单）：")])]),t._v(" "),n("p",[t._v("使用bitmaps类型定义一个可以访问的名单，名单id作为bitmaps的偏移量，每次访问和bitmap里面的id进行比较，如果访问id不在bitmaps里面，进行拦截，不允许访问。")]),t._v(" "),n("p",[n("strong",[t._v("（3）")]),t._v(" "),n("strong",[t._v("采用布隆过滤器")]),t._v("：(布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是一个很长的二进制向量(位图)和一系列随机映射函数（哈希函数）。")]),t._v(" "),n("p",[t._v("布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。)")]),t._v(" "),n("p",[t._v("将所有可能存在的数据哈希到一个足够大的bitmaps中，一个一定不存在的数据会被 这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。")]),t._v(" "),n("p",[n("strong",[t._v("（4）")]),t._v(" **进行实时监控：**当发现Redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务")]),t._v(" "),n("h2",{attrs:{id:"缓存击穿"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[t._v("#")]),t._v(" 缓存击穿")]),t._v(" "),n("h3",{attrs:{id:"问题描述-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题描述-2"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),n("p",[t._v("key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(875),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"解决方案-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-2"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),n("p",[t._v("key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题。"),n("br"),t._v("\n解决问题：")]),t._v(" "),n("p",[t._v("（1）预先设置热门数据：在redis高峰访问之前，把一些热门数据提前存入到redis里面，加大这些热门数据key的时长")]),t._v(" "),n("p",[t._v("（2）实时调整：现场监控哪些数据热门，实时调整key的过期时长")]),t._v(" "),n("p",[t._v("（3）使用锁：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("（1） 就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。\n\n（2） 先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX）去set一个mutex key\n\n（3） 当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；\n")])])]),n("p",[t._v("当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(876),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"缓存雪崩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),n("h3",{attrs:{id:"问题描述-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题描述-3"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),n("p",[t._v("key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。")]),t._v(" "),n("p",[t._v("缓存雪崩与缓存击穿的区别在于这里针对很多key缓存，前者则是某一个key")]),t._v(" "),n("p",[t._v("正常访问"),n("br"),t._v(" "),n("img",{attrs:{src:a(877),alt:""}})]),t._v(" "),n("p",[t._v("缓存失效瞬间"),n("br"),t._v(" "),n("img",{attrs:{src:a(878),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"解决方案-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-3"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),n("p",[t._v("缓存失效时的雪崩效应对底层系统的冲击非常可怕！")]),t._v(" "),n("p",[t._v("解决方案：")]),t._v(" "),n("p",[t._v("（1） "),n("strong",[t._v("构建多级缓存架构：")]),t._v(" nginx缓存 + redis缓存 +其他缓存（ehcache等）")]),t._v(" "),n("p",[t._v("（2） "),n("strong",[t._v("使用锁或队列：")])]),t._v(" "),n("p",[t._v("用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况")]),t._v(" "),n("p",[t._v("（3） "),n("strong",[t._v("设置过期标志更新缓存：")])]),t._v(" "),n("p",[t._v("记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际key的缓存。")]),t._v(" "),n("p",[t._v("（4） "),n("strong",[t._v("将缓存失效时间分散开：")])]),t._v(" "),n("p",[t._v("比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。")]),t._v(" "),n("h2",{attrs:{id:"分布式锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),n("h3",{attrs:{id:"问题描述-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题描述-4"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),n("p",[t._v("随着业务发展的需要，原单体单机部署的系统被演化成分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的Java API并不能提供分布式锁的能力。为了解决这个问题就需要一种跨JVM的互斥机制来控制共享资源的访问，这就是分布式锁要解决的问题！")]),t._v(" "),n("p",[t._v("分布式锁主流的实现方案：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("基于数据库实现分布式锁")])]),t._v(" "),n("li",[n("p",[t._v("基于缓存（Redis等）")])]),t._v(" "),n("li",[n("p",[t._v("基于Zookeeper")])])]),t._v(" "),n("p",[t._v("每一种分布式锁解决方案都有各自的优缺点：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("性能：redis最高")])]),t._v(" "),n("li",[n("p",[t._v("可靠性：zookeeper最高")])])]),t._v(" "),n("p",[t._v("这里，我们就基于redis实现分布式锁。")]),t._v(" "),n("h3",{attrs:{id:"解决方案-使用redis实现分布式锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-使用redis实现分布式锁"}},[t._v("#")]),t._v(" 解决方案：使用redis实现分布式锁")]),t._v(" "),n("p",[t._v("redis:命令")]),t._v(" "),n("p",[t._v("# set sku:1:info “OK” NX PX 10000")]),t._v(" "),n("p",[t._v("EX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value 。")]),t._v(" "),n("p",[t._v("PX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于 PSETEX key millisecond value 。")]),t._v(" "),n("p",[t._v("NX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。")]),t._v(" "),n("p",[t._v("XX ：只在键已经存在时，才对键进行设置操作。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(879),alt:""}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("多个客户端同时获取锁（setnx）")])]),t._v(" "),n("li",[n("p",[t._v("获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）")])]),t._v(" "),n("li",[n("p",[t._v("其他客户端等待重试")])])]),t._v(" "),n("h3",{attrs:{id:"编写代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写代码"}},[t._v("#")]),t._v(" 编写代码")]),t._v(" "),n("p",[t._v("Redis: set num 0")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testLock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1获取锁，setne")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"111"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2获取锁成功、查询num的值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.1判断num为空return")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.2有值就转成成int")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.3把redis的num加1")]),t._v("\n        redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.4释放锁，del")]),t._v("\n        redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3获取锁失败、每隔0.1秒再获取")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("重启，服务集群，通过网关压力测试：")]),t._v(" "),n("p",[t._v("ab -n 1000 -c 100 http://192.168.140.1:8080/test/testLock")]),t._v(" "),n("p",[n("img",{attrs:{src:a(880),alt:""}})]),t._v(" "),n("p",[t._v("查看redis中num的值：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(881),alt:""}})]),t._v(" "),n("p",[t._v("基本实现。")]),t._v(" "),n("p",[t._v("问题：setnx刚好获取到锁，业务逻辑出现异常，导致锁无法释放")]),t._v(" "),n("p",[t._v("解决：设置过期时间，自动释放锁。")]),t._v(" "),n("h3",{attrs:{id:"优化之设置锁的过期时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化之设置锁的过期时间"}},[t._v("#")]),t._v(" 优化之设置锁的过期时间")]),t._v(" "),n("p",[t._v("设置过期时间有两种方式：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("首先想到通过expire设置过期时间（缺乏原子性：如果在setnx和expire之间出现异常，锁也无法释放）")])]),t._v(" "),n("li",[n("p",[t._v("在set时指定过期时间（推荐）")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(882),alt:""}})]),t._v(" "),n("p",[t._v("设置过期时间："),n("br"),t._v(" "),n("img",{attrs:{src:a(883),alt:""}})]),t._v(" "),n("p",[t._v("压力测试肯定也没有问题。自行测试")]),t._v(" "),n("p",[t._v("问题：可能会释放其他服务器的锁。")]),t._v(" "),n("p",[t._v("场景：如果业务逻辑的执行时间是7s。执行流程如下")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("index1业务逻辑没执行完，3秒后锁被自动释放。")])]),t._v(" "),n("li",[n("p",[t._v("index2获取到锁，执行业务逻辑，3秒后锁被自动释放。")])]),t._v(" "),n("li",[n("p",[t._v("index3获取到锁，执行业务逻辑")])]),t._v(" "),n("li",[n("p",[t._v("index1业务逻辑执行完成，开始调用del释放锁，这时释放的是index3的锁，导致index3的业务只执行1s就被别人释放。")])])]),t._v(" "),n("p",[t._v("最终等于没锁的情况。")]),t._v(" "),n("p",[t._v("解决：setnx获取锁时，设置一个指定的唯一值（例如：uuid）；释放前获取这个值，判断是否自己的锁")]),t._v(" "),n("h3",{attrs:{id:"优化之uuid防误删"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化之uuid防误删"}},[t._v("#")]),t._v(" 优化之UUID防误删")]),t._v(" "),n("p",[n("img",{attrs:{src:a(884),alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(885),alt:""}})]),t._v(" "),n("p",[t._v("问题：删除操作缺乏原子性。")]),t._v(" "),n("p",[t._v("场景：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("index1执行删除时，查询到的lock值确实和uuid相等")]),t._v(" "),n("p",[t._v("uuid=v1")]),t._v(" "),n("p",[t._v("set(lock,uuid)；"),n("br"),t._v(" "),n("img",{attrs:{src:a(886),alt:""}})])]),t._v(" "),n("li",[n("p",[t._v("index1执行删除前，lock刚好过期时间已到，被redis自动释放")]),t._v(" "),n("p",[t._v("在redis中没有了lock，没有了锁。")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(887),alt:""}})]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("index2获取了lock")])]),t._v(" "),n("p",[t._v("index2线程获取到了cpu的资源，开始执行方法")]),t._v(" "),n("p",[t._v("uuid=v2")]),t._v(" "),n("p",[t._v("set(lock,uuid)；")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("index1执行删除，此时会把index2的lock删除")])]),t._v(" "),n("p",[t._v("index1 因为已经在方法中了，所以不需要重新上锁。index1有执行的权限。index1已经比较完成了，这个时候，开始执行"),n("br"),t._v(" "),n("img",{attrs:{src:a(888),alt:""}})]),t._v(" "),n("p",[t._v("删除的index2的锁！")]),t._v(" "),n("h3",{attrs:{id:"优化之lua脚本保证删除的原子性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化之lua脚本保证删除的原子性"}},[t._v("#")]),t._v(" 优化之LUA脚本保证删除的原子性")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testLockLua"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLockLua")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 声明一个uuid ,将做为一个value 放入我们的key所对应的值中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" uuid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UUID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 定义一个锁：lua 脚本可以使用同一把锁，来实现删除！")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" skuId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问skuId 为25号的商品 100008348542")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" locKey "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock:"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" skuId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁住的是每个商品的数据")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 获取锁")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一种： lock 与过期时间中间不写任何的代码。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// redisTemplate.expire("lock",10, TimeUnit.SECONDS);//设置过期时间')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行的业务逻辑开始")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取缓存中的num 数据")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是空直接返回")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是空 如果说在这出现了异常！ 那么delete 就删除失败！ 也就是说锁永远存在！")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使num 每次+1 放入缓存")]),t._v("\n        redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*使用lua脚本来锁*/")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义lua 脚本")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用redis执行lua执行")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" redisScript "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        redisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScriptText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置一下返回值类型 为Long")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为删除判断的时候，返回的0,给其封装为数据类型。如果不封装那么默认返回String 类型，")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么返回字符串与0 会有发生错误。")]),t._v("\n        redisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setResultType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个要是script 脚本 ，第二个需要判断的key，第三个就是key所对应的值。")]),t._v("\n        redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("locKey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他线程等待")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 睡眠")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 睡醒了之后，调用方法。")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLockLua")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Lua 脚本详解：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(889),alt:""}})]),t._v(" "),n("p",[t._v("项目中正确使用：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("img",{attrs:{src:a(890),alt:""}})])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("img",{attrs:{src:a(891),alt:""}})])])])]),t._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("1、加锁")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 从redis中获取锁,set k1 v1 px 20000 nx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" uuid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UUID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" lock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("opsForValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIfAbsent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uuid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("2、使用lua释放锁")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 释放锁 del")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"if redis.call('get', KEYS[1]) == ARGV[1] then return redis.call('del', KEYS[1]) else return 0 end\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置lua脚本返回的数据类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" redisScript "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultRedisScript")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置lua脚本返回类型为Long")]),t._v("\nredisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setResultType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nredisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setScriptText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nredisTemplate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("redisScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uuid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("3、重试")]),t._v(" "),n("p",[t._v("Thread."),n("strong",[t._v("sleep")]),t._v("(500); testLock();")]),t._v(" "),n("p",[t._v("为了确保分布式锁可用，我们至少要确保锁的实现同时****满足以下四个条件****：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("互斥性。在任意时刻，只有一个客户端能持有锁。")])]),t._v(" "),n("li",[n("p",[t._v("不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。")])]),t._v(" "),n("li",[n("p",[t._v("解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。")])]),t._v(" "),n("li",[n("p",[t._v("加锁和解锁必须具有原子性。")])])])])}),[],!1,null,null,null);s.default=e.exports},874:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-41-12.2beea902.png"},875:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-42-27.6379bd69.png"},876:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-43-27.21772eb5.png"},877:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-43-50.3a014b48.png"},878:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-43-54.a4f6a800.png"},879:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-45-39.3c6f6bf8.png"},880:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-46-36.5325284c.png"},881:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-46-41.ba639d09.png"},882:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-47-05.1e3b0d31.png"},883:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-47-13.adc0df8e.png"},884:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-47-51.c81b354a.png"},885:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-48-02.79acb786.png"},886:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-48-29.d3e51ef3.png"},887:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-48-45.f5f9d44c.png"},888:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-48-56.f5f9d44c.png"},889:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-49-37.b365aedd.png"},890:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-50-01.4d546d5a.png"},891:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-09-49-53.a370871d.png"}}]);
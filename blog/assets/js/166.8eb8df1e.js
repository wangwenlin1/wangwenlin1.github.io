(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{1274:function(a,t,s){"use strict";s.r(t);var n=s(19),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"核心技术-configmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心技术-configmap"}},[a._v("#")]),a._v(" 核心技术-configMap")]),a._v(" "),s("h2",{attrs:{id:"configmap-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap-概述"}},[a._v("#")]),a._v(" ConfigMap 概述")]),a._v(" "),s("p",[a._v("ConfigMap 功能在 Kubernetes1.2 版本中引入，许多应用程序会从配置文件、命令行参数或环境变量中读取配 置信息。ConfigMap AP 丨给我们提供了向容器中注入配置信息的机制，ConfigMap 可以被用来保存单个属性，也 可以用来保存整个配置文件或者 JSON 二进制大对象")]),a._v(" "),s("h2",{attrs:{id:"configmap-的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap-的创建"}},[a._v("#")]),a._v(" ConfigMap 的创建")]),a._v(" "),s("h3",{attrs:{id:"使用目录创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用目录创建"}},[a._v("#")]),a._v(" 使用目录创建")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" docs/user-guide/configmap/kubectl/\n\n-- 显示\ngame.properties\n\nui.properties\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" docs/user-guide/configmap/kubectl/game.properties\n\n-- 显示\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("enemies")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("aliens\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("lives")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n\nenemies.cheat"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n\nenemies.cheat.level"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("noGoodRotten\n\nsecret.code.passphrase"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("UUDDLRLRBABAS\n\nsecret.code.allowed"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n\nsecret.code.lives"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("\n\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" docs/user-guide/configmap/kubectl/ui.properties\n\n-- 显示\ncolor.good"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("purple\n\ncolor.bad"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("yellow\n\nallow.textmode"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n\nhow.nice.to.look"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("fairlyNice\n\nkubectl create configmap game-config --from-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("docs/user?guide/configmap/kubectl\n")])])]),s("p",[a._v("-from-file 指定在目录下的所有文件都会被用在 ConfigMap 里面创建一个键值对，键的名")]),a._v(" "),s("p",[a._v("字就是文件名，值就 是文件的内容")]),a._v(" "),s("h3",{attrs:{id:"使用文件创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用文件创建"}},[a._v("#")]),a._v(" 使用文件创建")]),a._v(" "),s("p",[a._v("只要指定为一个文件就可以从单个文件中创建 ConfigMap")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl create configmap game-config-2 --from-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("docs/user- guide/configmap/kubectl/game.properties\n\nkubectl get configmaps game-config-2 -o yaml\n\n")])])]),s("p",[a._v("-from-file 这个参数可以使用多次，你可以使用两次分別指定上个实例中的那两个配置文件，效果就跟指定整个 目录是一样的")]),a._v(" "),s("h3",{attrs:{id:"使用字面值创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用字面值创建"}},[a._v("#")]),a._v(" 使用字面值创建")]),a._v(" "),s("p",[a._v("使用文字值创建，利用-from-literal 参数传递配置信息，该参数可以使用多次，格式如下")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl create configmap special-config --from-literal"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("special.how"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("very --from-literal"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("special.type"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("charm\n\nkubectl get configmaps special-config -o yaml\n\n")])])]),s("h2",{attrs:{id:"pod-中使用-configmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-中使用-configmap"}},[a._v("#")]),a._v(" Pod 中使用 ConfigMap")]),a._v(" "),s("h3",{attrs:{id:"使用-configmap-来替代环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-configmap-来替代环境变量"}},[a._v("#")]),a._v(" 使用 ConfigMap 来替代环境变量")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ConfigMap\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" special"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" default\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("special.how")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" very\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("special.type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" charm\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ConfigMap\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" default\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("log_level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" INFO\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Pod\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" dapi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("pod\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("container\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" hub.atguigu.com/library/myapp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("v1\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" SPECIAL\\_LEVEL\\_KEY\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("valueFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("configMapKeyRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" special"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" special.how\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" SPECIAL\\_TYPE\\_KEY\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("valueFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("configMapKeyRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" special"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" special.type\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("envFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("-configMapRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("config\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Never\n\n")])])]),s("h3",{attrs:{id:"使用-configmap-设置命令行参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-configmap-设置命令行参数"}},[a._v("#")]),a._v(" 使用 ConfigMap 设置命令行参数")]),a._v(" "),s("h3",{attrs:{id:"通过数据卷插件使用-configmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过数据卷插件使用-configmap"}},[a._v("#")]),a._v(" 通过数据卷插件使用 ConfigMap")]),a._v(" "),s("p",[a._v("在数据卷里面使用这个 ConfigMap, 有不同的选项。最基本的就是将文件填入数据卷，在这个文件中，键就是文 件名，键值就是文件内容")]),a._v(" "),s("h2",{attrs:{id:"configmap-的热更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap-的热更新"}},[a._v("#")]),a._v(" ConfigMap 的热更新")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'kubectl get pods -l run=my-nginx -o=name|cut -d \"/\" -f2'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v("\n\n/etc/config/log_level\n\n-- 显示\nINFO\n")])])]),s("p",[a._v("修改 ConfigMap")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl edit configmap log-config\n")])])]),s("p",[a._v("修改 log_level 的值为 DEBUG 等待大概 10 秒钟时间，再次查看环境变量的值")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'kubectl get pods -l run=my-nginx -o=name|cut -d \"/\" -f2'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v("\n/tmp/log_level DEBUG\n")])])]),s("h2",{attrs:{id:"configmap-更新后滚动更新-pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configmap-更新后滚动更新-pod"}},[a._v("#")]),a._v(" ConfigMap 更新后滚动更新 Pod")]),a._v(" "),s("p",[a._v("更新 ConfigMap 目前并不会触发相关 Pod 的滚动更新，可以通过修改 pod annotations 的")]),a._v(" "),s("p",[a._v("方式强制触发滚动更新")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl patch deployment my-nginx --patch "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{"spec": {"template": {"metadata":\n{"annotations": {"version/config": "20190411" }}}}}\'')]),a._v(" \n")])])]),s("p",[a._v("这个例子里我们在.spec.template.metadata.annotations 中添加 version/config , 每次通过修改 version/config 来触发滚动更新更新 ConfigMap 后：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("使用该 ConfigMap 挂载的 Env 不会同步更新")])]),a._v(" "),s("li",[s("p",[a._v("使用该 ConfigMap 挂载的 Volume 中的数据需要一段时间（实测大概 10 秒）才能同步更新")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{1040:function(a,s,n){a.exports=n.p+"assets/img/2021-04-23-10-51-56.3ff5d5a6.png"},1041:function(a,s,n){a.exports=n.p+"assets/img/2021-04-23-10-52-33.c0c0e165.png"},1042:function(a,s,n){a.exports=n.p+"assets/img/2021-04-23-10-52-57.1155597f.png"},1043:function(a,s,n){a.exports=n.p+"assets/img/2021-04-23-10-53-21.8fc7aa01.png"},1282:function(a,s,n){"use strict";n.r(s);var t=n(19),e=Object(t.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"核心技术-helm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心技术-helm"}},[a._v("#")]),a._v(" 核心技术-Helm")]),a._v(" "),t("h2",{attrs:{id:"helm-引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-引入"}},[a._v("#")]),a._v(" Helm 引入")]),a._v(" "),t("p",[a._v("K8S 上的应用对象，都是由特定的资源描述组成，包括 deployment、service 等。都保存各自文件中或者集中写到一个配置文件。然后 kubectl apply –f 部署。如果应用只由一个或几个这样的服务组成，上面部署方式足够了。而对于一个复杂的应用，会有很多类似上面的资源描述文件，例如微服务架构应用，组成应用的服务可能多达十个，几十个。如果有更新或回滚应用的需求，可能要修改和维护所涉及的大量资源文件，而这种组织和管理应用的方式就显得力不从心了。且由于缺少对发布过的应用版本管理和控制，使Kubernetes 上的应用维护和更新等面临诸多的挑战，主要面临以下问题：")]),a._v(" "),t("ul",[t("li",[a._v("如何将这些服务作为一个整体管理")]),a._v(" "),t("li",[a._v("这些资源文件如何高效复用")]),a._v(" "),t("li",[a._v("不支持应用级别的版本管理")])]),a._v(" "),t("h2",{attrs:{id:"helm-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-介绍"}},[a._v("#")]),a._v(" Helm 介绍")]),a._v(" "),t("p",[a._v("Helm 是一个 Kubernetes 的包管理工具，就像 Linux 下的包管理器，如 yum/apt 等，可以很方便的将之前打包好的 yaml 文件部署到 kubernetes 上。")]),a._v(" "),t("p",[a._v("Helm 有 3 个重要概念：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("helm：一个命令行客户端工具，主要用于 Kubernetes 应用 chart 的创建、打包、发布和管理。")])]),a._v(" "),t("li",[t("p",[a._v("Chart：应用描述，一系列用于描述 k8s 资源相关文件的集合。")])]),a._v(" "),t("li",[t("p",[a._v("Release：基于 Chart 的部署实体，一个 chart 被 Helm 运行后将会生成对应的一个")])])]),a._v(" "),t("h2",{attrs:{id:"helm-v3-变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-v3-变化"}},[a._v("#")]),a._v(" Helm v3 变化")]),a._v(" "),t("p",[a._v("2019 年 11 月 13 日， Helm 团队发布 Helm v3 的第一个稳定版本。")]),a._v(" "),t("p",[a._v("该版本主要变化如下：")]),a._v(" "),t("p",[a._v("架构变化：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("最明显的变化是 Tiller 的删除")])]),a._v(" "),t("li",[t("p",[a._v("Release 名称可以在不同命名空间重用")])])]),a._v(" "),t("p",[t("img",{attrs:{src:n(1040),alt:""}})]),a._v(" "),t("ul",[t("li",[t("p",[a._v("支持将 Chart 推送至 Docker 镜像仓库中")])]),a._v(" "),t("li",[t("p",[a._v("使用 JSONSchema 验证 chart values")])]),a._v(" "),t("li",[t("p",[a._v("其他")])])]),a._v(" "),t("h2",{attrs:{id:"helm-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-客户端"}},[a._v("#")]),a._v(" Helm 客户端")]),a._v(" "),t("h3",{attrs:{id:"部署-helm-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-helm-客户端"}},[a._v("#")]),a._v(" 部署 helm 客户端")]),a._v(" "),t("p",[a._v("Helm 客户端下载地址：https://github.com/helm/helm/releases")]),a._v(" "),t("p",[a._v("解压移动到/usr/bin/目录即可。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://get.helm.sh/helm-vv3.2.1-linux-amd64.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" zxvf helm-v3.2.1-linux-amd64.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" linux-amd64/helm /usr/bin/\n")])])]),t("p",[a._v("helm 常用命令")]),a._v(" "),t("p",[t("img",{attrs:{src:n(1041),alt:""}}),t("br"),a._v(" "),t("img",{attrs:{src:n(1042),alt:""}}),t("br"),a._v(" "),t("img",{attrs:{src:n(1043),alt:""}})]),a._v(" "),t("h3",{attrs:{id:"配置国内-chart-仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置国内-chart-仓库"}},[a._v("#")]),a._v(" 配置国内 chart 仓库")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("微软仓库（http://mirror.azure.cn/kubernetes/charts/）这个仓库推荐，基本上官网有的 chart 这里都有。")])]),a._v(" "),t("li",[t("p",[a._v("阿里云仓库（https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts ）")])]),a._v(" "),t("li",[t("p",[a._v("官方仓库（https://hub.kubeapps.com/charts/incubator）官方 chart 仓库，国内有点不好使。")])])]),a._v(" "),t("p",[a._v("添加存储库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm repo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" stable http://mirror.azure.cn/kubernetes/charts\n\nhelm repo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\n\nhelm repo update\n")])])]),t("p",[a._v("查看配置的存储库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm repo list\n\nhelm search repo stable\n")])])]),t("p",[a._v("删除存储库：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm repo remove aliyun\n")])])]),t("h2",{attrs:{id:"helm-基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-基本使用"}},[a._v("#")]),a._v(" helm 基本使用")]),a._v(" "),t("p",[a._v("主要介绍三个命令：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("chart install")])]),a._v(" "),t("li",[t("p",[a._v("chart upgrade")])]),a._v(" "),t("li",[t("p",[a._v("chart rollback")])])]),a._v(" "),t("h3",{attrs:{id:"使用-chart-部署一个应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-chart-部署一个应用"}},[a._v("#")]),a._v(" 使用 chart 部署一个应用")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查找 chart")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm search repo weave")]),a._v("\n\nNAME CHART VERSION APP VERSION DESCRIPTION\n\naliyun/weave-cloud "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),a._v(".2 Weave Cloud is a add-on\n\nto Kubernetes "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\naliyun/weave-scope "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.9")]),a._v(".21.6.5 A Helm chart "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the Weave Scope\n\ncluster visual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nstable/weave-cloud "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.3")]),a._v(".71.4.0 Weave Cloud is a add-on to Kubernetes\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nstable/weave-scope "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),a._v(".101.12.0 A Helm chart "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the Weave Scope\n\ncluster visual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看 chrt 信息")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm show chart stable/mysql")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#安装包")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm install ui stable/weave-scope")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看发布状态")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm list")]),a._v("\n\nNAME NAMESPACE REVISION UPDATED\n\nSTATUS CHART APP VERSION\n\nui default "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12020")]),a._v("-05-2817:45:01.696109626 +0800 CST deployed\n\nweave-scope-1.1.101.12.0\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@k8s-master ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm status ui")]),a._v("\n\nNAME: ui\n\nLAST DEPLOYED: Thu May "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2817")]),a._v(":45:012020\n\nNAMESPACE: default\n\nSTATUS: deployed\n\nREVISION: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\nNOTES:\n\nYou should now be able to access the Scope frontend "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" your web browser, by\n\nusing kubectl port-forward:\n\nkubectl -n default port-forward "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("kubectl -n default get endpoints "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\nui-weave-scope -o "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("jsonpath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{.subsets[0].addresses[0].targetRef.name}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":4040\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" browsing to http://localhost:8080/.\n\nFor "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" details on using Weave Scope, see the Weave Scope documentation:\n\nhttps://www.weave.works/docs/scope/latest/introducing/\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#修改 service Type: NodePort 即可访问 ui")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"安装前自定义-chart-配置选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装前自定义-chart-配置选项"}},[a._v("#")]),a._v(" 安装前自定义 chart 配置选项")]),a._v(" "),t("p",[a._v("自定义选项是因为并不是所有的 chart 都能按照默认配置运行成功，可能会需要一些环境依赖，例如 PV。")]),a._v(" "),t("p",[a._v("所以我们需要自定义 chart 配置选项，安装过程中有两种方法可以传递配置数据：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("--values（或-f）：指定带有覆盖的 YAML 文件。这可以多次指定，最右边的文件优先")])]),a._v(" "),t("li",[t("p",[a._v("--set：在命令行上指定替代。如果两者都用，--set 优先级高")])]),a._v(" "),t("li",[t("p",[a._v("--values 使用，先将修改的变量写到一个文件中")])])]),a._v(" "),t("h1",{attrs:{id:"helm-show-values-stable-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-show-values-stable-mysql"}},[a._v("#")]),a._v(" helm show values stable/mysql")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catconfig.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("persistence")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("storageClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"managed-nfs-storage"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("accessMode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ReadWriteOnce\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 8Gi\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"k8s"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlPassword")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123456"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlDatabase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"k8s"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm install db -f config.yaml stable/mysql")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# kubectl get pods")]),a._v("\n\nNAME READY STATUS RESTARTS AGE\n\ndb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("57485b68dc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("4xjhv 1/1 Running 0 8m51s\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# kubectl run -it db-client --rm --restart=Never --image=mysql:5.7 -- bash")]),a._v("\n\nIf you don't see a command prompt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" try pressing enter.\n\nroot@db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysql -hdb-mysql -uk8s -p123456")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Warning"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" Using a password on the command line interface can be insecure.\n\nWelcome to the MySQL monitor. Commands end with ; or \\\\g.\n\nYour MySQL connection id is 36\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("Server version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 5.7.30 MySQL Community Server (GPL)\n\nCopyright (c) 2000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\n\naffiliates. Other names may be trademarks of their respective\n\nowners.\n\nType 'help; ' or '\\\\h'for help. Type '\\\\c' to clear the current input statement.\n\nmysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v(" show databases; \n\n+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("+\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" Database "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v("\n\n+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("+\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" information_schema "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v(" k8s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("|")]),a._v("\n\n+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("+\n\n")])])]),t("p",[a._v("以上将创建具有名称的默认 MySQL 用户 k8s，并授予此用户访问新创建的 k8s 数据库的权限，但将接受该图表的所有其余默认值。")]),a._v(" "),t("p",[a._v("命令行替代变量：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" db --set persistence.storageClass"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"managed-nfs-storage"')]),a._v("\nstable/mysql\n")])])]),t("p",[a._v("也可以把 chart 包下载下来查看详情：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm pull stable/mysql --untar\n")])])]),t("p",[a._v("values yaml 与 set 使用：")]),a._v(" "),t("p",[a._v("该 helm install 命令可以从多个来源安装：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("chart 存储库")])]),a._v(" "),t("li",[t("p",[a._v("本地 chart 存档（helm install foo-0.1.1.tgz）")])]),a._v(" "),t("li",[t("p",[a._v("chart 目录（helm install path/to/foo）")])]),a._v(" "),t("li",[t("p",[a._v("完整的 URL（helm install https://example.com/charts/foo-1.2.3.tgz）")])])]),a._v(" "),t("h2",{attrs:{id:"构建一个-helm-chart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建一个-helm-chart"}},[a._v("#")]),a._v(" 构建一个 Helm Chart")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm create mychart")]),a._v("\n\nCreating mychart\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# tree mychart/")]),a._v("\n\nmychart/\n\n├── charts\n\n├── Chart.yaml\n\n├── templates\n\n│ ├── deployment.yaml\n\n│ ├── _helpers.tpl\n\n│ ├── ingress.yaml\n\n│ ├── NOTES.txt\n\n│ └── service.yaml\n\n└── values.yaml\n")])])]),t("ul",[t("li",[t("p",[a._v("Chart.yaml：用于描述这个 Chart 的基本信息，包括名字、描述信息以及版本等。")])]),a._v(" "),t("li",[t("p",[a._v("values.yaml ：用于存储 templates 目录中模板文件中用到变量的值。")])]),a._v(" "),t("li",[t("p",[a._v("Templates： 目录里面存放所有 yaml 模板文件。")])]),a._v(" "),t("li",[t("p",[a._v("charts：目录里存放这个 chart 依赖的所有子 chart。")])]),a._v(" "),t("li",[t("p",[a._v("NOTES.txt ：用于介绍 Chart 帮助信息， helm install 部署后展示给用户。例如：")])])]),a._v(" "),t("p",[a._v("如何使用这个 Chart、列出缺省的设置等。")]),a._v(" "),t("ul",[t("li",[a._v("_helpers.tpl：放置模板助手的地方，可以在整个 chart 中重复使用")])]),a._v(" "),t("p",[a._v("创建 Chart 后，接下来就是将其部署：")]),a._v(" "),t("p",[a._v("helm install web mychart/")]),a._v(" "),t("p",[a._v("也可以打包推送的 charts 仓库共享别人使用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm package mychart/")]),a._v("\n\nmychart-0.1.0.tgz\n")])])]),t("h3",{attrs:{id:"chart-模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chart-模板"}},[a._v("#")]),a._v(" chart 模板")]),a._v(" "),t("p",[a._v("Helm 最核心的就是模板，即模板化的 K8S manifests 文件。它本质上就是一个 Go 的 template 模板。Helm 在 Go template 模板的基础上，还会增加很多东西。如一些自定义的元数据信息、扩展的库以及一些类似于编程形式的工作流，例如 条件语句、管道等等。这些东西都会使得我们的模板变得更加丰富。有了模板，我们怎么把我们的配置融入进去呢？用的就是这个 values 文件。这两部分内容其实就是 chart 的核心功能。接下来，部署 nginx 应用，熟悉模板使用")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm create nginx\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" nginx/Chart.yaml\n")])])]),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v2\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("description")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" A Helm chart for Kubernetes\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" application\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0.1.0\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("appVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.15")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim nginx/values.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.15")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("serviceport")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("targetport")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim nginx/templates/NOTES.txt")]),a._v("\n\nhello\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim nginx/templates/deployment.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" apps/v1\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Deployment\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.label \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Release. Name \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.replicas \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("matchLabels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.label \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.label \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v(". Values.image")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" . Values.tag \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" web\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim nginx/templates/service.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Service\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.label \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Release. Name \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.serviceport \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" TCP\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.targetport \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  . Values.label \n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" NodePort\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看实际的模板被渲染过后的资源文件")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm get manifest web")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm install web nginx/")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NAME")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" web\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("LAST DEPLOYED")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Fri May 2916"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("09"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("462020")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NAMESPACE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" default\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("STATUS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deployed\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("REVISION")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("TEST SUITE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" None\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("NOTES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\nhello\n\n")])])]),t("h1",{attrs:{id:"helm-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-list"}},[a._v("#")]),a._v(" helm list")]),a._v(" "),t("p",[a._v("NAME NAMESPACE REVISION UPDATED")]),a._v(" "),t("p",[a._v("STATUS CHART APP VERSION")]),a._v(" "),t("p",[a._v("web default 12020-05-2916:09:46.608457282 +0800 CST deployed")]),a._v(" "),t("p",[a._v("nginx-0.1.01.15")]),a._v(" "),t("h1",{attrs:{id:"kubectl-get-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-get-pod"}},[a._v("#")]),a._v(" kubectl get pod")]),a._v(" "),t("p",[a._v("NAME READY STATUS RESTARTS AGE")]),a._v(" "),t("p",[a._v("web-5675686b8-7wtqk 1/1 Running 0 25s")]),a._v(" "),t("p",[a._v("web-5675686b8-f72hk 1/1 Running 0 25s")]),a._v(" "),t("p",[a._v("web-5675686b8-k4kqr 1/1 Running 0 25s")]),a._v(" "),t("p",[a._v("这个 deployment 就是一个 Go template 的模板，这里定义的 Release 模板对象属于 Helm")]),a._v(" "),t("p",[a._v("内置的一种对象，是从 values 文件中读取出来的。这样一来，我们可以将需要变化的地方")]),a._v(" "),t("p",[a._v("都定义变量。")]),a._v(" "),t("h3",{attrs:{id:"调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试"}},[a._v("#")]),a._v(" 调试")]),a._v(" "),t("p",[a._v("Helm 也提供了--dry-run --debug 调试参数，帮助你验证模板正确性。在执行 helm install 时候带上这两个参数就可以把对应的 values 值和渲染的资源清单打印出来，而不会真正的去部署一个 release。")]),a._v(" "),t("p",[a._v("比如我们来调试上面创建的 chart 包：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" web --dry-run nginx/\n")])])]),t("h3",{attrs:{id:"内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[a._v("#")]),a._v(" 内置对象")]),a._v(" "),t("p",[a._v("刚刚我们使用 . Release. Name将 release 的名称插入到模板中。这里的 Release 就")]),a._v(" "),t("p",[a._v("是 Helm 的内置对象，下面是一些常用的内置对象：")]),a._v(" "),t("p",[a._v("Release. Name release 名称")]),a._v(" "),t("p",[a._v("Release. Name release 名字")]),a._v(" "),t("p",[a._v("Release. Namespace release 命名空间")]),a._v(" "),t("p",[a._v("Release. Service release 服务的名称")]),a._v(" "),t("p",[a._v("Release. Revision release 修订版本号，从 1 开始累加")]),a._v(" "),t("h3",{attrs:{id:"values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#values"}},[a._v("#")]),a._v(" Values")]),a._v(" "),t("p",[a._v("Values 对象是为 Chart 模板提供值，这个对象的值有 4 个来源：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("chart 包中的 values.yaml 文件")])]),a._v(" "),t("li",[t("p",[a._v("父 chart 包的 values.yaml 文件")])]),a._v(" "),t("li",[t("p",[a._v("通过 helm install 或者 helm upgrade 的 -f 或者 --values 参数传入的自定义的 yaml 文件")])]),a._v(" "),t("li",[t("p",[a._v("通过 --set 参数传入的值")])])]),a._v(" "),t("p",[a._v("chart 的 values.yaml 提供的值可以被用户提供的 values 文件覆盖，而该文件同样可以被 --set 提供的参数所覆盖。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm upgrade web --set "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" nginx/\n")])])]),t("p",[a._v('Release "web" has been upgraded. Happy Helming!')]),a._v(" "),t("p",[a._v("NAME: web")]),a._v(" "),t("p",[a._v("LAST DEPLOYED: Fri May 2916:34:172020")]),a._v(" "),t("p",[a._v("NAMESPACE: default")]),a._v(" "),t("p",[a._v("STATUS: deployed")]),a._v(" "),t("p",[a._v("REVISION: 2")]),a._v(" "),t("p",[a._v("TEST SUITE: None")]),a._v(" "),t("p",[a._v("NOTES:")]),a._v(" "),t("p",[a._v("hello")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("history")]),a._v(" web\n")])])]),t("p",[a._v("REVISION UPDATED STATUS CHART APP")]),a._v(" "),t("p",[a._v("VERSION DESCRIPTION")]),a._v(" "),t("p",[a._v("1 Fri May 2916:33:562020 superseded nginx-0.1.01.15")]),a._v(" "),t("p",[a._v("Install complete")]),a._v(" "),t("p",[a._v("2 Fri May 2916:34:172020 deployed nginx-0.1.01.15")]),a._v(" "),t("p",[a._v("Upgrade complete")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl get pod\n")])])]),t("p",[a._v("NAME READY STATUS RESTARTS AGE")]),a._v(" "),t("p",[a._v("web-5675686b8-7n7bg 1/1 Running 0 54s")]),a._v(" "),t("p",[a._v("web-5675686b8-9vf28 1/1 Running 0 33s")]),a._v(" "),t("p",[a._v("web-5675686b8-9wkgz 1/1 Running 0 54s")]),a._v(" "),t("p",[a._v("web-5675686b8-jdrhr 1/1 Running 0 54s")]),a._v(" "),t("p",[a._v("web-5675686b8-rrrxc 1/1 Running 0 33s")]),a._v(" "),t("h3",{attrs:{id:"升级、回滚和删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#升级、回滚和删除"}},[a._v("#")]),a._v(" 升级、回滚和删除")]),a._v(" "),t("p",[a._v("发布新版本的 chart 时，或者当您要更改发布的配置时，可以使用该 helm upgrade 命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm upgrade --set "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("imageTag")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.17")]),a._v(" web nginx\nhelm upgrade -f values.yaml web nginx\n")])])]),t("p",[a._v("如果在发布后没有达到预期的效果，则可以使用 helm rollback 回滚到之前的版本。")]),a._v(" "),t("p",[a._v("例如将应用回滚到第一个版本：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm rollback web 1")]),a._v("\n")])])]),t("p",[a._v("卸载发行版，请使用以下 helm uninstall 命令：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm uninstall web")]),a._v("\n")])])]),t("p",[a._v("查看历史版本配置信息")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm get all --revision 1 web")]),a._v("\n")])])]),t("h3",{attrs:{id:"管道与函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管道与函数"}},[a._v("#")]),a._v(" 管道与函数")]),a._v(" "),t("p",[a._v("前面讲的模块，其实就是将值传给模板引擎进行渲染，模板引擎还支持对拿到数据进行二次处理。")]),a._v(" "),t("p",[a._v("例如从. Values 中读取的值变成字符串，可以使用 quote 函数实现：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" templates/deployment.yaml\n")])])]),t("p",[a._v("app:  quote . Values.label.app")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" --dry-run web "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/mychart/\n")])])]),t("p",[a._v("project: ms")]),a._v(" "),t("p",[a._v('app: "nginx"')]),a._v(" "),t("p",[a._v("quote . Values.label.app 将后面的值作为参数传递给 quote 函数。")]),a._v(" "),t("p",[a._v("模板函数调用语法为：functionName arg1 arg2...")]),a._v(" "),t("p",[a._v("另外还会经常使用一个 default 函数，该函数允许在模板中指定默认值，以防止该值被忽")]),a._v(" "),t("p",[a._v("略掉。")]),a._v(" "),t("p",[a._v("例如忘记定义，执行 helm install 会因为缺少字段无法创建资源，这时就可以定义一个")]),a._v(" "),t("p",[a._v("默认值。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\nreplicas: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deployment.yaml")]),a._v("\n\napiVersion: apps/v1\n\nkind: Deployment\n\nmetadata:\n\nname:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name -deployment\n\n - name:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" default "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nginx"')]),a._v(" \n\n")])])]),t("p",[a._v("其他函数：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("缩进： . Values.resources | indent 12")])]),a._v(" "),t("li",[t("p",[a._v("大写： upper . Values.resources")])]),a._v(" "),t("li",[t("p",[a._v("首字母大写： title . Values.resources")])])]),a._v(" "),t("h2",{attrs:{id:"流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[a._v("#")]),a._v(" 流程控制")]),a._v(" "),t("p",[a._v("流程控制是为模板提供了一种能力，满足更复杂的数据逻辑处理。")]),a._v(" "),t("p",[a._v("Helm 模板语言提供以下流程控制语句：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("if/else 条件块")])]),a._v(" "),t("li",[t("p",[a._v("with 指定范围")])]),a._v(" "),t("li",[t("p",[a._v("range 循环块")])])]),a._v(" "),t("h3",{attrs:{id:"if"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[a._v("#")]),a._v(" if")]),a._v(" "),t("p",[a._v("if/else 块是用于在模板中有条件地包含文本块的方法，条件块的基本结构如下：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" PIPELINE \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do something")]),a._v("\n\n elseif OTHER PIPELINE \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do something else")]),a._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Default case")]),a._v("\n\n end \n\n示例\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\ndevops: k8\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deployment.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\ntemplate:\n\nmetadata:\n\nlabels:\n\napp: nginx\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" eq "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.devops "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"k8s"')]),a._v(" \n\ndevops: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" \n\ndevops: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("456")]),a._v("\n\n end \n\n在上面条件语句使用了 eq 运算符判断是否相等，除此之外，还支持\n\nne、 lt、 gt、 and、 or 等运算符。\n\n注意数据类型。\n\n通过模板引擎来渲染一下，会得到如下结果：\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# helm install --dry-run web ../mychart/")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nlabels:\n\napp: nginx\n\ndevops: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("456")]),a._v("\n\n可以看到渲染出来会有多余的空行，这是因为当模板引擎运行时，会将控制指令删除，所\n\n有之前占的位置也就空白了，需要使用 - "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". 的方式消除此空行：\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deploymemt.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nenv:\n\n - ifeq "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.env.hello "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"world"')]),a._v(" \n\n - name: hello\n\nvalue: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),a._v("\n\n - end \n\n现在是不是没有多余的空格了，如果使用-需谨慎，比如上面模板文件中：\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deploymemt.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nenv:\n\n - ifeq "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.env.hello "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"world"')]),a._v(" -\n\n - hello: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n\n - end \n\n这会渲染成：\n\nenv:- hello: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n\n因为-它删除了双方的换行符。\n\n条件判断就是判断条件是否为真，如果值为以下几种情况则为 false：\n\n 一个布尔类型的 "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n\n 一个数字 零\n\n 一个 空的字符串\n\n 一个空的集合（ map、 slice、 tuple、 dict、 array）\n\n除了上面的这些情况外，其他所有条件都为 真。\n\n例如，判断一个空的数组\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\nresources: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# limits:")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cpu: 100m")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# memory: 128Mi")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# requests:")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cpu: 100m")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# memory: 128Mi")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deploymemt.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nspec:\n\ncontainers:\n\n - image: nginx:1.16\n\nname: nginx\n\n - "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.resources \n\nresources:\n\n toYaml "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.resources "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" indent "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" \n\n - end \n\n例如，判断一个布尔值\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\nservice:\n\ntype: ClusterIP\n\nport: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n\ningress:\n\nenabled: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n\nhost: example.ctnrs.com\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/ingress.yaml")]),a._v("\n\n - "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.ingress.enabled -\n\napiVersion: networking.k8s.io/v1beta1\n\nkind: Ingress\n\nmetadata:\n\nname:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name -ingress\n\nspec:\n\nrules:\n\n - host:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.ingress.host \n\nhttp:\n\npaths:\n\n - path: /\n\nbackend:\n\nserviceName:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name \n\nservicePort:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.service.port \n\n end \n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.2")]),a._v("、range\n\n在 Helm 模板语言中，使用 range 关键字来进行循环操作。\n\n我们在 values.yaml 文件中添加上一个变量列表：\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\ntest:\n\n - "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\n - "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n\n - "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n\n循环打印该列表：\n\napiVersion: v1\n\nkind: ConfigMap\n\nmetadata:\n\nname:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name \n\ndata:\n\ntest: "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n\n - range "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.test \n\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" \n\n - end \n\n循环内部我们使用的是一个 .，这是因为当前的作用域就在当前循环内，这个 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" 引用的\n\n当前读取的元素。\n")])])]),t("h3",{attrs:{id:"with"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#with"}},[a._v("#")]),a._v(" with")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("with ：控制变量作用域。\n\n还记得之前我们的 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release.xxx或者 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.xxx吗？其中的 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" 就是表示对\n\n当前范围的引用， "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values 就是告诉模板在当前范围中查找 Values 对象的值。\n\n而 with 语句就可以来控制变量的作用域范围，其语法和一个简单的 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" 语句比较类似：\n\n with PIPELINE \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# restricted scope")]),a._v("\n\n end \n\nwith 语句可以允许将当前范围 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" 设置为特定的对象，比如我们前面一直使用\n\n的 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label，我们可以使用 with 来将 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" 范围指向 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label：\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catvalues.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nnodeSelector:\n\nteam: a\n\ngpu: "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yes")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat templates/deployment.yaml")]),a._v("\n\napiVersion: apps/v1\n\nkind: Deployment\n\nmetadata:\n\nname:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name -deployment\n\nspec:\n\nreplicas: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\nselector:\n\nmatchLabels:\n\napp: nginx\n\ntemplate:\n\nmetadata:\n\nlabels:\n\napp: nginx\n\nspec:\n\n - with "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.nodeSelector \n\nnodeSelector:\n\nteam:  .team \n\ngpu:  .gpu \n\n - end \n\ncontainers:\n\n - image: nginx:1.16\n\nname: nginx\n\n优化后：\n\n - with "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.nodeSelector \n\nnodeSelector:\n\n - toYaml "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" nindent "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" \n\n - end \n\n上面增加了一个 - with "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.nodeSelector xxx - end 的一个块，这样的话\n\n就可以在当前的块里面直接引用 .team 和 .gpu 了。\n\nwith 是一个循环构造。使用. Values.nodeSelector 中的值：将其转换为 Yaml。\n\ntoYaml 之后的点是循环中. Values.nodeSelector 的当前值\n")])])]),t("h3",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),t("p",[a._v("变量，在模板中，使用变量的场合不多，但我们将看到如何使用它来简化代码，并更好地")]),a._v(" "),t("p",[a._v("利用 with 和 range。")]),a._v(" "),t("p",[a._v("问题 1：获取数组键值")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat ../values.yaml")]),a._v("\n\nenv:\n\nNAME: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gateway"')]),a._v("\n\nJAVA_OPTS: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-Xmx1G"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catdeployment.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\nenv:\n\n - range "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$k")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$v")]),a._v(" :"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.env \n\n - name:  "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$k")]),a._v(" \n\nvalue:  "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$v")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" quote \n\n - end \n\n结果如下\n\nenv:\n\n - name: JAVA_OPTS\n\nvalue: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-Xmx1G"')]),a._v("\n\n - name: NAME\n\nvalue: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gateway"')]),a._v(" 上面在 range 循环中使用 "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$key")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$value")]),a._v(" 两个变量来接收后面列表循环的键和值。\n\n问题 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("：with 中不能使用内置对象\n\nwith 语句块内不能再 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name 对象，否则报错。\n\n我们可以将该对象赋值给一个变量可以来解决这个问题：\n\napiVersion: apps/v1\n\nkind: Deployment\n\nmetadata:\n\nname:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name -deployment\n\nspec:\n\nreplicas:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.replicas \n\ntemplate:\n\nmetadata:\n\nlabels:\n\nproject:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label.project \n\napp:  quote "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label.app \n\n - with "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label \n\nproject:  .project \n\napp:  .app \n\nrelease:  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name \n\n - end \n\n上面会出错\n\n - "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$releaseName")]),a._v(" :"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name -\n\n - with "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Values.label \n\nproject:  .project \n\napp:  .app \n\nrelease:  "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$releaseName")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者可以使用$符号, 引入全局命名空间")]),a._v("\n\nrelease:  $. Release. Name \n\n - end \n\n可以看到在 with 语句上面增加了一句 -"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$releaseName")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(". Release. Name-，其\n\n中 "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$releaseName")]),a._v(" 就是后面的对象的一个引用变量，它的形式就是 "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v("，赋值操作使\n\n用 :"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("，这样 with 语句块内部的 "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$releaseName")]),a._v(" 变量仍然指向的是 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name\n")])])]),t("h3",{attrs:{id:"命名模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名模板"}},[a._v("#")]),a._v(" 命名模板")]),a._v(" "),t("p",[a._v("需要复用代码的地方用。")]),a._v(" "),t("p",[a._v("命名模板：使用 define 定义，template 引入，在 templates 目录中默认下划线开头的文")]),a._v(" "),t("p",[a._v("件为公共模板(helpers.tpl)")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat _helpers.tpl")]),a._v("\n\n - define "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.fullname"')]),a._v(" -\n\n - "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Chart. Name -- "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" Release. Name \n\n - end -\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catdeployment.yaml")]),a._v("\n\napiVersion: apps/v1\n\nkind: Deployment\n\nmetadata:\n\nname:  template"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.fullname"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\ntemplate 指令是将一个模板包含在另一个模板中的方法。但是，template 函数不能用于Go 模板管道。为了解决该问题，增加 include 功能。\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat _helpers.tpl")]),a._v("\n\n - define "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.labels"')]),a._v(" -\n\napp:  template"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.fullname"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" \n\nchart: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" . Chart. Name - . Chart. Version "')]),a._v("\n\nrelease: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" . Release. Name "')]),a._v("\n\n - end -\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# catdeployment.yaml")]),a._v("\n\napiVersion: apps/v1\n\nkind: Deployment\n\nmetadata:\n\nname:  include"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.fullname"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" \n\nlabels:\n\n - include "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"demo.labels"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" nindent "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". 上面包含一个名为 demo.labels 的模板，然后将值 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" 传递给模板，最后将该模板的输出传递给 nindent 函数。\n\n")])])]),t("h2",{attrs:{id:"开发自己的-chart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发自己的-chart"}},[a._v("#")]),a._v(" 开发自己的 chart")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("先创建模板")])]),a._v(" "),t("li",[t("p",[a._v("修改 Chart.yaml，Values.yaml，添加常用的变量")])]),a._v(" "),t("li",[t("p",[a._v("在 templates 目录下创建部署镜像所需要的 yaml 文件，并变量引用 yaml 里经常变动的字段")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
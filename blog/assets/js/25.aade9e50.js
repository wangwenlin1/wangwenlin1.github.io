(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{1257:function(s,t,a){"use strict";a.r(t);var e=a(19),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[s._v("#")]),s._v(" 集群")]),s._v(" "),e("h2",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[s._v("#")]),s._v(" 问题")]),s._v(" "),e("p",[s._v("容量不够，redis如何进行扩容？")]),s._v(" "),e("p",[s._v("并发写操作， redis如何分摊？")]),s._v(" "),e("p",[s._v("另外，主从模式，薪火相传模式，主机宕机，导致ip地址发生变化，应用程序中配置需要修改对应的主机地址、端口等信息。")]),s._v(" "),e("p",[s._v("之前通过代理主机来解决，但是redis3.0中提供了解决方案。就是无中心化集群配置。")]),s._v(" "),e("h2",{attrs:{id:"什么是集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是集群"}},[s._v("#")]),s._v(" 什么是集群")]),s._v(" "),e("p",[s._v("Redis 集群实现了对Redis的水平扩容，即启动N个redis节点，将整个数据库分布存储在这N个节点中，每个节点存储总数据的1/N。")]),s._v(" "),e("p",[s._v("Redis 集群通过分区（partition）来提供一定程度的可用性（availability）： 即使集群中有一部分节点失效或者无法进行通讯， 集群也可以继续处理命令请求。")]),s._v(" "),e("h2",{attrs:{id:"删除持久化数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除持久化数据"}},[s._v("#")]),s._v(" 删除持久化数据")]),s._v(" "),e("p",[s._v("将rdb,aof文件都删除掉。")]),s._v(" "),e("h2",{attrs:{id:"制作6个实例-6379-6380-6381-6389-6390-6391"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#制作6个实例-6379-6380-6381-6389-6390-6391"}},[s._v("#")]),s._v(" 制作6个实例，6379,6380,6381,6389,6390,6391")]),s._v(" "),e("h3",{attrs:{id:"配置基本信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置基本信息"}},[s._v("#")]),s._v(" 配置基本信息")]),s._v(" "),e("p",[s._v("开启daemonize yes")]),s._v(" "),e("p",[s._v("Pid文件名字")]),s._v(" "),e("p",[s._v("指定端口")]),s._v(" "),e("p",[s._v("Log文件名字")]),s._v(" "),e("p",[s._v("Dump.rdb名字")]),s._v(" "),e("p",[s._v("Appendonly 关掉或者换名字")]),s._v(" "),e("h3",{attrs:{id:"redis-cluster配置修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster配置修改"}},[s._v("#")]),s._v(" redis cluster配置修改")]),s._v(" "),e("p",[s._v("cluster-enabled yes  打开集群模式")]),s._v(" "),e("p",[s._v("cluster-config-file nodes-6379.conf 设定节点配置文件名")]),s._v(" "),e("p",[s._v("cluster-node-timeout 15000  设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换。")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[s._v('include /home/bigdata/redis.conf\nport 6379\npidfile "/var/run/redis_6379.pid"\ndbfilename "dump6379.rdb"\ndir "/home/bigdata/redis_cluster"\nlogfile "/home/bigdata/redis_cluster/redis_err_6379.log"\ncluster'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("enabled yes\ncluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("file nodes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("6379.conf\ncluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("timeout 15000\n")])])]),e("h3",{attrs:{id:"修改好redis6379-conf文件-拷贝多个redis-conf文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改好redis6379-conf文件-拷贝多个redis-conf文件"}},[s._v("#")]),s._v(" 修改好redis6379.conf文件，拷贝多个redis.conf文件")]),s._v(" "),e("p",[e("img",{attrs:{src:a(883),alt:""}})]),s._v(" "),e("h3",{attrs:{id:"使用查找替换修改另外5个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用查找替换修改另外5个文件"}},[s._v("#")]),s._v(" 使用查找替换修改另外5个文件")]),s._v(" "),e("p",[s._v("例如：:%s/6379/6380")]),s._v(" "),e("h3",{attrs:{id:"启动6个redis服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动6个redis服务"}},[s._v("#")]),s._v(" 启动6个redis服务")]),s._v(" "),e("p",[e("img",{attrs:{src:a(884),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"将六个节点合成一个集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将六个节点合成一个集群"}},[s._v("#")]),s._v(" 将六个节点合成一个集群")]),s._v(" "),e("p",[s._v("组合之前，请确保所有redis实例启动后，nodes-xxxx.conf文件都生成正常。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(885),alt:""}})]),s._v(" "),e("ul",[e("li",[s._v("合体：")])]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("  /opt/redis-6.2.1/src\n\nredis-cli --cluster create --cluster-replicas "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6379 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6380 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6381 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6389 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6390 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".11.101:6391\n")])])]),e("p",[s._v("此处不要用127.0.0.1， 请用真实IP地址")]),s._v(" "),e("p",[s._v("--replicas 1 采用最简单的方式配置集群，一台主机，一台从机，正好三组。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(886),alt:""}})]),s._v(" "),e("p",[e("img",{attrs:{src:a(887),alt:""}})]),s._v(" "),e("ul",[e("li",[s._v("普通方式登录")])]),s._v(" "),e("p",[s._v("可能直接进入读主机，存储数据时，会出现MOVED重定向操作。所以，应该以集群方式登录。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(888),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"c-采用集群策略连接-设置数据会自动切换到相应的写主机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-采用集群策略连接-设置数据会自动切换到相应的写主机"}},[s._v("#")]),s._v(" -c 采用集群策略连接，设置数据会自动切换到相应的写主机")]),s._v(" "),e("p",[e("img",{attrs:{src:a(889),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"通过-cluster-nodes-命令查看集群信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过-cluster-nodes-命令查看集群信息"}},[s._v("#")]),s._v(" 通过 cluster nodes 命令查看集群信息")]),s._v(" "),e("p",[e("img",{attrs:{src:a(890),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"redis-cluster-如何分配这六个节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster-如何分配这六个节点"}},[s._v("#")]),s._v(" redis cluster 如何分配这六个节点?")]),s._v(" "),e("p",[s._v("一个集群至少要有三个主节点。")]),s._v(" "),e("p",[s._v("选项 --cluster-replicas 1 表示我们希望为集群中的每个主节点创建一个从节点。")]),s._v(" "),e("p",[s._v("分配原则尽量保证每个主数据库运行在不同的IP地址，每个从库和主库不在一个IP地址上。")]),s._v(" "),e("h2",{attrs:{id:"什么是slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是slots"}},[s._v("#")]),s._v(" 什么是slots")]),s._v(" "),e("p",[e("strong",[s._v("[OK] All nodes agree about slots configuration.")])]),s._v(" "),e("p",[e("strong",[s._v(">>> Check for open slots...")])]),s._v(" "),e("p",[e("strong",[s._v(">>> Check slots coverage...")])]),s._v(" "),e("p",[e("strong",[s._v("[OK] All")]),s._v(" "),e("strong",[s._v("16384 slots covered.")])]),s._v(" "),e("p",[s._v("一个 Redis 集群包含 16384 个插槽（hash slot）， 数据库中的每个键都属于这 16384 个插槽的其中一个，")]),s._v(" "),e("p",[s._v("集群使用公式 CRC16(key) % 16384 来计算键 key 属于哪个槽， 其中 CRC16(key) 语句用于计算键 key 的 CRC16 校验和 。")]),s._v(" "),e("p",[s._v("集群中的每个节点负责处理一部分插槽。 举个例子， 如果一个集群可以有主节点， 其中：")]),s._v(" "),e("p",[s._v("节点 A 负责处理 0 号至 5460 号插槽。")]),s._v(" "),e("p",[s._v("节点 B 负责处理 5461 号至 10922 号插槽。")]),s._v(" "),e("p",[s._v("节点 C 负责处理 10923 号至 16383 号插槽。")]),s._v(" "),e("h2",{attrs:{id:"在集群中录入值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在集群中录入值"}},[s._v("#")]),s._v(" 在集群中录入值")]),s._v(" "),e("p",[s._v("在redis-cli每次录入、查询键值，redis都会计算出该key应该送往的插槽，如果不是该客户端对应服务器的插槽，redis会报错，并告知应前往的redis实例地址和端口。")]),s._v(" "),e("p",[s._v("redis-cli客户端提供了 –c 参数实现自动重定向。")]),s._v(" "),e("p",[s._v("如 redis-cli  -c –p 6379 登入后，再录入、查询键值对可以自动重定向。")]),s._v(" "),e("p",[s._v("不在一个slot下的键值，是不能使用mget,mset等多键操作。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(891),alt:""}})]),s._v(" "),e("p",[s._v("可以通过{}来定义组的概念，从而使key中{}内相同内容的键值对放到一个slot中去。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(892),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"查询集群中的值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询集群中的值"}},[s._v("#")]),s._v(" 查询集群中的值")]),s._v(" "),e("p",[s._v("CLUSTER GETKEYSINSLOT <slot><count> 返回 count 个 slot 槽中的键。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(893),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"故障恢复"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#故障恢复"}},[s._v("#")]),s._v(" 故障恢复")]),s._v(" "),e("p",[s._v("如果主节点下线？从节点能否自动升为主节点？注意：****15秒超时****")]),s._v(" "),e("p",[e("img",{attrs:{src:a(894),alt:""}})]),s._v(" "),e("p",[s._v("主节点恢复后，主从关系会如何？主节点回来变成从机。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(895),alt:""}})]),s._v(" "),e("p",[s._v("如果所有某一段插槽的主从节点都宕掉，redis服务是否还能继续?")]),s._v(" "),e("p",[s._v("如果某一段插槽的主从都挂掉，而cluster-require-full-coverage 为yes ，那么 ，整个集群都挂掉")]),s._v(" "),e("p",[s._v("如果某一段插槽的主从都挂掉，而cluster-require-full-coverage 为no ，那么，该插槽数据全都不能使用，也无法存储。")]),s._v(" "),e("p",[s._v("redis.conf中的参数  cluster-require-full-coverage")]),s._v(" "),e("h2",{attrs:{id:"集群的jedis开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群的jedis开发"}},[s._v("#")]),s._v(" 集群的Jedis开发")]),s._v(" "),e("p",[s._v("即使连接的不是主机，集群会自动切换主机存储。主机写，从机读。")]),s._v(" "),e("p",[s._v("无中心化主从集群。无论从哪台主机写的数据，其他主机上都能读到数据。")]),s._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisClusterTest")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n     "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("set "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashSet")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.31.211"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),s._v(" jedisCluster"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     jedisCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedisCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("h2",{attrs:{id:"redis-集群提供了以下好处"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群提供了以下好处"}},[s._v("#")]),s._v(" Redis 集群提供了以下好处")]),s._v(" "),e("p",[s._v("实现扩容")]),s._v(" "),e("p",[s._v("分摊压力")]),s._v(" "),e("p",[s._v("无中心配置相对简单")]),s._v(" "),e("h2",{attrs:{id:"redis-集群的不足"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-集群的不足"}},[s._v("#")]),s._v(" Redis 集群的不足")]),s._v(" "),e("p",[s._v("多键操作是不被支持的")]),s._v(" "),e("p",[s._v("多键的Redis事务是不被支持的。lua脚本不被支持")]),s._v(" "),e("p",[s._v("由于集群方案出现较晚，很多公司已经采用了其他的集群方案，而代理或者客户端分片的方案想要迁移至redis cluster，需要整体迁移而不是逐步过渡，复杂度较大。")])])}),[],!1,null,null,null);t.default=r.exports},883:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-34-55.9e1d9dc8.png"},884:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-35-44.7328e237.png"},885:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-36-07.12057295.png"},886:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-36-43.3dc575f7.png"},887:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-36-47.ee2d32bf.png"},888:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-37-07.54e9fc24.png"},889:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-37-32.7b2e2e58.png"},890:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-37-47.4f3ccf70.png"},891:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-39-07.46670628.png"},892:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-39-12.245bde56.png"},893:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-39-23.27289769.png"},894:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-39-35.f8302042.png"},895:function(s,t,a){s.exports=a.p+"assets/img/2021-05-15-09-39-39.70c6a20e.png"}}]);
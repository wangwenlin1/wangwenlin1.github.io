(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{1262:function(t,s,a){"use strict";a.r(s);var e=a(19),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"配置文件介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置文件介绍"}},[t._v("#")]),t._v(" 配置文件介绍")]),t._v(" "),e("p",[t._v("自定义目录：/myredis/redis.conf")]),t._v(" "),e("h2",{attrs:{id:"units-单位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#units-单位"}},[t._v("#")]),t._v(" Units 单位")]),t._v(" "),e("p",[t._v("配置大小单位,开头定义了一些基本的度量单位，只支持bytes，不支持bit大小写不敏感")]),t._v(" "),e("p",[e("img",{attrs:{src:a(951),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"includes-包含"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#includes-包含"}},[t._v("#")]),t._v(" INCLUDES 包含")]),t._v(" "),e("p",[e("img",{attrs:{src:a(952),alt:""}})]),t._v(" "),e("p",[t._v("类似jsp中的include，多实例的情况可以把公用的配置文件提取出来")]),t._v(" "),e("h2",{attrs:{id:"网络相关配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络相关配置"}},[t._v("#")]),t._v(" 网络相关配置")]),t._v(" "),e("h3",{attrs:{id:"bind"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bind"}},[t._v("#")]),t._v(" bind")]),t._v(" "),e("p",[t._v("默认情况bind=127.0.0.1只能接受本机的访问请求")]),t._v(" "),e("p",[t._v("不写的情况下，无限制接受任何ip地址的访问")]),t._v(" "),e("p",[t._v("生产环境肯定要写你应用服务器的地址；服务器是需要远程访问的，所以需要将其注释掉")]),t._v(" "),e("p",[t._v("如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，Redis只允许接受本机的响应")]),t._v(" "),e("p",[e("img",{attrs:{src:a(953),alt:""}})]),t._v(" "),e("p",[t._v("保存配置，停止服务，重启启动查看进程，不再是本机访问了。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(954),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"protected-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#protected-mode"}},[t._v("#")]),t._v(" protected-mode")]),t._v(" "),e("p",[t._v("将本机访问保护模式设置no")]),t._v(" "),e("p",[e("img",{attrs:{src:a(955),alt:""}})]),t._v(" "),e("p",[t._v("Port")]),t._v(" "),e("p",[t._v("端口号，默认 6379")]),t._v(" "),e("p",[e("img",{attrs:{src:a(956),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"tcp-backlog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-backlog"}},[t._v("#")]),t._v(" tcp-backlog")]),t._v(" "),e("p",[t._v("设置tcp的backlog，backlog其实是一个连接队列，backlog队列总和=未完成三次握手队列 + 已经完成三次握手队列。")]),t._v(" "),e("p",[t._v("在高并发环境下你需要一个高backlog值来避免慢客户端连接问题。")]),t._v(" "),e("p",[t._v("注意Linux内核会将这个值减小到/proc/sys/net/core/somaxconn的值（128），所以需要确认增大/proc/sys/net/core/somaxconn和/proc/sys/net/ipv4/tcp_max_syn_backlog（128）两个值来达到想要的效果")]),t._v(" "),e("p",[e("img",{attrs:{src:a(957),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"timeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timeout"}},[t._v("#")]),t._v(" timeout")]),t._v(" "),e("p",[t._v("一个空闲的客户端维持多少秒会关闭，0表示关闭该功能。即永不关闭。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(958),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"tcp-keepalive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-keepalive"}},[t._v("#")]),t._v(" tcp-keepalive")]),t._v(" "),e("p",[t._v("对访问客户端的一种心跳检测，每个n秒检测一次。")]),t._v(" "),e("p",[t._v("单位为秒，如果设置为0，则不会进行Keepalive检测，建议设置成60")]),t._v(" "),e("p",[e("img",{attrs:{src:a(959),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"general-通用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#general-通用"}},[t._v("#")]),t._v(" GENERAL 通用")]),t._v(" "),e("h3",{attrs:{id:"daemonize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#daemonize"}},[t._v("#")]),t._v(" daemonize")]),t._v(" "),e("p",[t._v("是否为后台进程，设置为yes")]),t._v(" "),e("p",[t._v("守护进程，后台启动")]),t._v(" "),e("p",[e("img",{attrs:{src:a(960),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"pidfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pidfile"}},[t._v("#")]),t._v(" pidfile")]),t._v(" "),e("p",[t._v("存放pid文件的位置，每个实例会产生一个不同的pid文件")]),t._v(" "),e("p",[e("img",{attrs:{src:a(961),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"loglevel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loglevel"}},[t._v("#")]),t._v(" loglevel")]),t._v(" "),e("p",[t._v("指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为"),e("strong",[t._v("notice")])]),t._v(" "),e("p",[t._v("四个级别根据使用阶段来选择，生产环境选择notice 或者warning")]),t._v(" "),e("p",[e("img",{attrs:{src:a(962),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"logfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logfile"}},[t._v("#")]),t._v(" logfile")]),t._v(" "),e("p",[t._v("日志文件名称")]),t._v(" "),e("p",[e("img",{attrs:{src:a(963),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"databases-16"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#databases-16"}},[t._v("#")]),t._v(" databases 16")]),t._v(" "),e("p",[t._v("设定库的数量 默认16，默认数据库为0，可以使用SELECT <dbid>命令在连接上指定数据库id")]),t._v(" "),e("p",[e("img",{attrs:{src:a(964),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"security安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#security安全"}},[t._v("#")]),t._v(" SECURITY安全")]),t._v(" "),e("h3",{attrs:{id:"设置密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置密码"}},[t._v("#")]),t._v(" 设置密码")]),t._v(" "),e("p",[e("img",{attrs:{src:a(965),alt:""}})]),t._v(" "),e("p",[t._v("访问密码的查看、设置和取消")]),t._v(" "),e("p",[t._v("在命令中设置密码，只是临时的。重启redis服务器，密码就还原了。")]),t._v(" "),e("p",[t._v("永久设置，需要再配置文件中进行设置。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(966),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"limits限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#limits限制"}},[t._v("#")]),t._v(" LIMITS限制")]),t._v(" "),e("h3",{attrs:{id:"maxclients"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxclients"}},[t._v("#")]),t._v(" maxclients")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("设置redis同时可以与多少个客户端进行连接。")])]),t._v(" "),e("li",[e("p",[t._v("默认情况下为10000个客户端。")])]),t._v(" "),e("li",[e("p",[t._v("如果达到了此限制，redis则会拒绝新的连接请求，并且向这些连接请求方发出“max number of clients reached”以作回应。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(967),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"maxmemory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxmemory"}},[t._v("#")]),t._v(" maxmemory")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("建议****必须设置****，否则，将内存占满，造成服务器宕机")])]),t._v(" "),e("li",[e("p",[t._v("设置redis可以使用的内存量。一旦到达内存使用上限，redis将会试图移除内部数据，移除规则可以通过maxmemory-policy来指定。")])]),t._v(" "),e("li",[e("p",[t._v("如果redis无法根据移除规则来移除内存中的数据，或者设置了“不允许移除”，那么redis则会针对那些需要申请内存的指令返回错误信息，比如SET、LPUSH等。")])]),t._v(" "),e("li",[e("p",[t._v("但是对于无内存申请的指令，仍然会正常响应，比如GET等。如果你的redis是主redis（说明你的redis有从redis），那么在设置内存使用上限时，需要在系统中留出一些内存空间给同步队列缓存，只有在你设置的是“不移除”的情况下，才不用考虑这个因素。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(968),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"maxmemory-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxmemory-policy"}},[t._v("#")]),t._v(" maxmemory-policy")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("volatile-lru：使用LRU算法移除key，只对设置了过期时间的键；（最近最少使用）")])]),t._v(" "),e("li",[e("p",[t._v("allkeys-lru：在所有集合key中，使用LRU算法移除key")])]),t._v(" "),e("li",[e("p",[t._v("volatile-random：在过期集合中移除随机的key，只对设置了过期时间的键")])]),t._v(" "),e("li",[e("p",[t._v("allkeys-random：在所有集合key中，移除随机的key")])]),t._v(" "),e("li",[e("p",[t._v("volatile-ttl：移除那些TTL值最小的key，即那些最近要过期的key")])]),t._v(" "),e("li",[e("p",[t._v("noeviction：不进行移除。针对写操作，只是返回错误信息")])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(969),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"maxmemory-samples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxmemory-samples"}},[t._v("#")]),t._v(" maxmemory-samples")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("设置样本数量，LRU算法和最小TTL算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认会检查这么多个key并选择其中LRU的那个。")])]),t._v(" "),e("li",[e("p",[t._v("一般设置3到7的数字，数值越小样本越不准确，但性能消耗越小。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(970),alt:""}})])])}),[],!1,null,null,null);s.default=r.exports},951:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-54-47.16d3b58c.png"},952:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-55-15.cf1e410f.png"},953:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-55-51.91155cfa.png"},954:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-56-03.3f0f6561.png"},955:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-56-24.7ded0b07.png"},956:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-56-44.f8aa4ad8.png"},957:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-57-33.cd9a5de0.png"},958:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-57-49.bf862f8c.png"},959:function(t,s,a){t.exports=a.p+"assets/img/2021-05-14-23-58-08.27a1cfc6.png"},960:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-00-25.cc142838.png"},961:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-00-32.3277bfa9.png"},962:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-01-11.219066a2.png"},963:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-01-28.ffe64b06.png"},964:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-01-54.5bc77f35.png"},965:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-02-26.1ed4924b.png"},966:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-02-42.f3799bcc.png"},967:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-03-36.086e5eb0.png"},968:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-04-05.ddaf6dbc.png"},969:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-04-43.302152eb.png"},970:function(t,s,a){t.exports=a.p+"assets/img/2021-05-15-00-05-10.12056042.png"}}]);